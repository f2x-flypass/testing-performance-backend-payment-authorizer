/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 111.0, "minX": 0.0, "maxY": 4419.0, "series": [{"data": [[0.0, 466.0], [0.1, 466.0], [0.2, 466.0], [0.3, 476.0], [0.4, 476.0], [0.5, 479.0], [0.6, 479.0], [0.7, 483.0], [0.8, 483.0], [0.9, 484.0], [1.0, 484.0], [1.1, 484.0], [1.2, 488.0], [1.3, 488.0], [1.4, 490.0], [1.5, 490.0], [1.6, 490.0], [1.7, 490.0], [1.8, 490.0], [1.9, 490.0], [2.0, 491.0], [2.1, 491.0], [2.2, 491.0], [2.3, 492.0], [2.4, 492.0], [2.5, 493.0], [2.6, 493.0], [2.7, 494.0], [2.8, 494.0], [2.9, 494.0], [3.0, 494.0], [3.1, 494.0], [3.2, 494.0], [3.3, 494.0], [3.4, 495.0], [3.5, 495.0], [3.6, 495.0], [3.7, 495.0], [3.8, 495.0], [3.9, 495.0], [4.0, 496.0], [4.1, 496.0], [4.2, 497.0], [4.3, 497.0], [4.4, 497.0], [4.5, 499.0], [4.6, 499.0], [4.7, 499.0], [4.8, 499.0], [4.9, 500.0], [5.0, 500.0], [5.1, 500.0], [5.2, 500.0], [5.3, 501.0], [5.4, 501.0], [5.5, 501.0], [5.6, 501.0], [5.7, 501.0], [5.8, 501.0], [5.9, 501.0], [6.0, 502.0], [6.1, 502.0], [6.2, 502.0], [6.3, 502.0], [6.4, 502.0], [6.5, 502.0], [6.6, 502.0], [6.7, 502.0], [6.8, 502.0], [6.9, 502.0], [7.0, 502.0], [7.1, 505.0], [7.2, 505.0], [7.3, 506.0], [7.4, 506.0], [7.5, 508.0], [7.6, 508.0], [7.7, 508.0], [7.8, 508.0], [7.9, 508.0], [8.0, 508.0], [8.1, 508.0], [8.2, 509.0], [8.3, 509.0], [8.4, 509.0], [8.5, 509.0], [8.6, 511.0], [8.7, 511.0], [8.8, 511.0], [8.9, 511.0], [9.0, 511.0], [9.1, 511.0], [9.2, 511.0], [9.3, 512.0], [9.4, 512.0], [9.5, 512.0], [9.6, 512.0], [9.7, 512.0], [9.8, 512.0], [9.9, 512.0], [10.0, 513.0], [10.1, 513.0], [10.2, 513.0], [10.3, 513.0], [10.4, 514.0], [10.5, 514.0], [10.6, 514.0], [10.7, 514.0], [10.8, 514.0], [10.9, 514.0], [11.0, 514.0], [11.1, 514.0], [11.2, 514.0], [11.3, 515.0], [11.4, 515.0], [11.5, 515.0], [11.6, 515.0], [11.7, 516.0], [11.8, 516.0], [11.9, 516.0], [12.0, 516.0], [12.1, 516.0], [12.2, 516.0], [12.3, 516.0], [12.4, 517.0], [12.5, 517.0], [12.6, 517.0], [12.7, 517.0], [12.8, 517.0], [12.9, 517.0], [13.0, 518.0], [13.1, 518.0], [13.2, 518.0], [13.3, 519.0], [13.4, 519.0], [13.5, 519.0], [13.6, 519.0], [13.7, 519.0], [13.8, 519.0], [13.9, 520.0], [14.0, 520.0], [14.1, 521.0], [14.2, 521.0], [14.3, 521.0], [14.4, 521.0], [14.5, 521.0], [14.6, 522.0], [14.7, 522.0], [14.8, 522.0], [14.9, 522.0], [15.0, 522.0], [15.1, 522.0], [15.2, 522.0], [15.3, 522.0], [15.4, 522.0], [15.5, 523.0], [15.6, 523.0], [15.7, 525.0], [15.8, 525.0], [15.9, 525.0], [16.0, 525.0], [16.1, 526.0], [16.2, 526.0], [16.3, 526.0], [16.4, 526.0], [16.5, 526.0], [16.6, 526.0], [16.7, 526.0], [16.8, 527.0], [16.9, 527.0], [17.0, 528.0], [17.1, 528.0], [17.2, 528.0], [17.3, 528.0], [17.4, 528.0], [17.5, 528.0], [17.6, 528.0], [17.7, 531.0], [17.8, 531.0], [17.9, 532.0], [18.0, 532.0], [18.1, 533.0], [18.2, 533.0], [18.3, 534.0], [18.4, 534.0], [18.5, 534.0], [18.6, 534.0], [18.7, 534.0], [18.8, 534.0], [18.9, 534.0], [19.0, 534.0], [19.1, 534.0], [19.2, 534.0], [19.3, 534.0], [19.4, 535.0], [19.5, 535.0], [19.6, 535.0], [19.7, 535.0], [19.8, 535.0], [19.9, 536.0], [20.0, 536.0], [20.1, 536.0], [20.2, 536.0], [20.3, 536.0], [20.4, 536.0], [20.5, 537.0], [20.6, 537.0], [20.7, 537.0], [20.8, 538.0], [20.9, 538.0], [21.0, 538.0], [21.1, 538.0], [21.2, 539.0], [21.3, 539.0], [21.4, 539.0], [21.5, 539.0], [21.6, 539.0], [21.7, 539.0], [21.8, 539.0], [21.9, 540.0], [22.0, 540.0], [22.1, 540.0], [22.2, 540.0], [22.3, 540.0], [22.4, 540.0], [22.5, 540.0], [22.6, 540.0], [22.7, 541.0], [22.8, 541.0], [22.9, 541.0], [23.0, 541.0], [23.1, 541.0], [23.2, 541.0], [23.3, 541.0], [23.4, 541.0], [23.5, 541.0], [23.6, 542.0], [23.7, 542.0], [23.8, 543.0], [23.9, 543.0], [24.0, 543.0], [24.1, 544.0], [24.2, 544.0], [24.3, 546.0], [24.4, 546.0], [24.5, 546.0], [24.6, 546.0], [24.7, 547.0], [24.8, 547.0], [24.9, 547.0], [25.0, 547.0], [25.1, 547.0], [25.2, 547.0], [25.3, 547.0], [25.4, 547.0], [25.5, 547.0], [25.6, 547.0], [25.7, 547.0], [25.8, 548.0], [25.9, 548.0], [26.0, 548.0], [26.1, 548.0], [26.2, 548.0], [26.3, 549.0], [26.4, 549.0], [26.5, 549.0], [26.6, 549.0], [26.7, 551.0], [26.8, 551.0], [26.9, 551.0], [27.0, 551.0], [27.1, 551.0], [27.2, 551.0], [27.3, 551.0], [27.4, 552.0], [27.5, 552.0], [27.6, 553.0], [27.7, 553.0], [27.8, 553.0], [27.9, 553.0], [28.0, 553.0], [28.1, 553.0], [28.2, 554.0], [28.3, 554.0], [28.4, 554.0], [28.5, 554.0], [28.6, 554.0], [28.7, 555.0], [28.8, 555.0], [28.9, 559.0], [29.0, 559.0], [29.1, 560.0], [29.2, 560.0], [29.3, 560.0], [29.4, 560.0], [29.5, 560.0], [29.6, 560.0], [29.7, 560.0], [29.8, 560.0], [29.9, 560.0], [30.0, 561.0], [30.1, 561.0], [30.2, 562.0], [30.3, 562.0], [30.4, 562.0], [30.5, 562.0], [30.6, 562.0], [30.7, 563.0], [30.8, 563.0], [30.9, 563.0], [31.0, 563.0], [31.1, 563.0], [31.2, 563.0], [31.3, 565.0], [31.4, 565.0], [31.5, 565.0], [31.6, 565.0], [31.7, 565.0], [31.8, 565.0], [31.9, 565.0], [32.0, 565.0], [32.1, 565.0], [32.2, 566.0], [32.3, 566.0], [32.4, 566.0], [32.5, 566.0], [32.6, 568.0], [32.7, 568.0], [32.8, 568.0], [32.9, 568.0], [33.0, 568.0], [33.1, 568.0], [33.2, 568.0], [33.3, 569.0], [33.4, 569.0], [33.5, 569.0], [33.6, 569.0], [33.7, 569.0], [33.8, 570.0], [33.9, 570.0], [34.0, 570.0], [34.1, 570.0], [34.2, 570.0], [34.3, 570.0], [34.4, 571.0], [34.5, 571.0], [34.6, 571.0], [34.7, 571.0], [34.8, 571.0], [34.9, 571.0], [35.0, 571.0], [35.1, 571.0], [35.2, 571.0], [35.3, 571.0], [35.4, 571.0], [35.5, 572.0], [35.6, 572.0], [35.7, 572.0], [35.8, 572.0], [35.9, 572.0], [36.0, 573.0], [36.1, 573.0], [36.2, 573.0], [36.3, 573.0], [36.4, 573.0], [36.5, 573.0], [36.6, 575.0], [36.7, 575.0], [36.8, 576.0], [36.9, 576.0], [37.0, 576.0], [37.1, 577.0], [37.2, 577.0], [37.3, 577.0], [37.4, 577.0], [37.5, 577.0], [37.6, 577.0], [37.7, 578.0], [37.8, 578.0], [37.9, 578.0], [38.0, 578.0], [38.1, 578.0], [38.2, 578.0], [38.3, 578.0], [38.4, 579.0], [38.5, 579.0], [38.6, 580.0], [38.7, 580.0], [38.8, 580.0], [38.9, 580.0], [39.0, 581.0], [39.1, 581.0], [39.2, 581.0], [39.3, 581.0], [39.4, 581.0], [39.5, 581.0], [39.6, 581.0], [39.7, 582.0], [39.8, 582.0], [39.9, 582.0], [40.0, 582.0], [40.1, 582.0], [40.2, 582.0], [40.3, 582.0], [40.4, 583.0], [40.5, 583.0], [40.6, 583.0], [40.7, 583.0], [40.8, 583.0], [40.9, 583.0], [41.0, 583.0], [41.1, 583.0], [41.2, 584.0], [41.3, 584.0], [41.4, 584.0], [41.5, 584.0], [41.6, 584.0], [41.7, 584.0], [41.8, 584.0], [41.9, 585.0], [42.0, 585.0], [42.1, 586.0], [42.2, 586.0], [42.3, 586.0], [42.4, 586.0], [42.5, 586.0], [42.6, 587.0], [42.7, 587.0], [42.8, 587.0], [42.9, 587.0], [43.0, 589.0], [43.1, 589.0], [43.2, 589.0], [43.3, 589.0], [43.4, 589.0], [43.5, 589.0], [43.6, 589.0], [43.7, 589.0], [43.8, 589.0], [43.9, 590.0], [44.0, 590.0], [44.1, 590.0], [44.2, 590.0], [44.3, 591.0], [44.4, 591.0], [44.5, 591.0], [44.6, 591.0], [44.7, 591.0], [44.8, 592.0], [44.9, 592.0], [45.0, 593.0], [45.1, 593.0], [45.2, 593.0], [45.3, 593.0], [45.4, 593.0], [45.5, 593.0], [45.6, 593.0], [45.7, 593.0], [45.8, 593.0], [45.9, 593.0], [46.0, 593.0], [46.1, 594.0], [46.2, 594.0], [46.3, 594.0], [46.4, 594.0], [46.5, 595.0], [46.6, 595.0], [46.7, 595.0], [46.8, 595.0], [46.9, 595.0], [47.0, 595.0], [47.1, 595.0], [47.2, 596.0], [47.3, 596.0], [47.4, 596.0], [47.5, 596.0], [47.6, 596.0], [47.7, 596.0], [47.8, 597.0], [47.9, 597.0], [48.0, 597.0], [48.1, 597.0], [48.2, 597.0], [48.3, 597.0], [48.4, 597.0], [48.5, 598.0], [48.6, 598.0], [48.7, 598.0], [48.8, 598.0], [48.9, 598.0], [49.0, 598.0], [49.1, 598.0], [49.2, 598.0], [49.3, 598.0], [49.4, 598.0], [49.5, 598.0], [49.6, 599.0], [49.7, 599.0], [49.8, 600.0], [49.9, 600.0], [50.0, 600.0], [50.1, 600.0], [50.2, 600.0], [50.3, 600.0], [50.4, 600.0], [50.5, 601.0], [50.6, 601.0], [50.7, 602.0], [50.8, 602.0], [50.9, 602.0], [51.0, 602.0], [51.1, 602.0], [51.2, 602.0], [51.3, 602.0], [51.4, 603.0], [51.5, 603.0], [51.6, 603.0], [51.7, 603.0], [51.8, 603.0], [51.9, 603.0], [52.0, 603.0], [52.1, 603.0], [52.2, 603.0], [52.3, 604.0], [52.4, 604.0], [52.5, 604.0], [52.6, 604.0], [52.7, 605.0], [52.8, 605.0], [52.9, 605.0], [53.0, 605.0], [53.1, 606.0], [53.2, 606.0], [53.3, 606.0], [53.4, 606.0], [53.5, 606.0], [53.6, 606.0], [53.7, 606.0], [53.8, 606.0], [53.9, 606.0], [54.0, 607.0], [54.1, 607.0], [54.2, 608.0], [54.3, 608.0], [54.4, 608.0], [54.5, 608.0], [54.6, 608.0], [54.7, 608.0], [54.8, 608.0], [54.9, 609.0], [55.0, 609.0], [55.1, 610.0], [55.2, 610.0], [55.3, 612.0], [55.4, 612.0], [55.5, 612.0], [55.6, 614.0], [55.7, 614.0], [55.8, 615.0], [55.9, 615.0], [56.0, 616.0], [56.1, 616.0], [56.2, 616.0], [56.3, 616.0], [56.4, 616.0], [56.5, 616.0], [56.6, 616.0], [56.7, 617.0], [56.8, 617.0], [56.9, 617.0], [57.0, 617.0], [57.1, 618.0], [57.2, 618.0], [57.3, 620.0], [57.4, 620.0], [57.5, 621.0], [57.6, 621.0], [57.7, 621.0], [57.8, 621.0], [57.9, 621.0], [58.0, 621.0], [58.1, 621.0], [58.2, 622.0], [58.3, 622.0], [58.4, 623.0], [58.5, 623.0], [58.6, 624.0], [58.7, 624.0], [58.8, 624.0], [58.9, 625.0], [59.0, 625.0], [59.1, 632.0], [59.2, 632.0], [59.3, 632.0], [59.4, 632.0], [59.5, 638.0], [59.6, 638.0], [59.7, 639.0], [59.8, 639.0], [59.9, 639.0], [60.0, 640.0], [60.1, 640.0], [60.2, 640.0], [60.3, 640.0], [60.4, 642.0], [60.5, 642.0], [60.6, 643.0], [60.7, 643.0], [60.8, 644.0], [60.9, 644.0], [61.0, 644.0], [61.1, 649.0], [61.2, 649.0], [61.3, 654.0], [61.4, 654.0], [61.5, 656.0], [61.6, 656.0], [61.7, 656.0], [61.8, 656.0], [61.9, 657.0], [62.0, 657.0], [62.1, 657.0], [62.2, 661.0], [62.3, 661.0], [62.4, 664.0], [62.5, 664.0], [62.6, 664.0], [62.7, 664.0], [62.8, 665.0], [62.9, 665.0], [63.0, 673.0], [63.1, 673.0], [63.2, 673.0], [63.3, 673.0], [63.4, 673.0], [63.5, 674.0], [63.6, 674.0], [63.7, 674.0], [63.8, 674.0], [63.9, 675.0], [64.0, 675.0], [64.1, 676.0], [64.2, 676.0], [64.3, 676.0], [64.4, 676.0], [64.5, 676.0], [64.6, 678.0], [64.7, 678.0], [64.8, 680.0], [64.9, 680.0], [65.0, 681.0], [65.1, 681.0], [65.2, 682.0], [65.3, 682.0], [65.4, 682.0], [65.5, 682.0], [65.6, 682.0], [65.7, 683.0], [65.8, 683.0], [65.9, 683.0], [66.0, 683.0], [66.1, 683.0], [66.2, 683.0], [66.3, 683.0], [66.4, 683.0], [66.5, 683.0], [66.6, 683.0], [66.7, 683.0], [66.8, 684.0], [66.9, 684.0], [67.0, 685.0], [67.1, 685.0], [67.2, 686.0], [67.3, 686.0], [67.4, 686.0], [67.5, 686.0], [67.6, 686.0], [67.7, 686.0], [67.8, 686.0], [67.9, 687.0], [68.0, 687.0], [68.1, 687.0], [68.2, 687.0], [68.3, 687.0], [68.4, 687.0], [68.5, 687.0], [68.6, 688.0], [68.7, 688.0], [68.8, 688.0], [68.9, 688.0], [69.0, 690.0], [69.1, 690.0], [69.2, 690.0], [69.3, 690.0], [69.4, 690.0], [69.5, 690.0], [69.6, 690.0], [69.7, 691.0], [69.8, 691.0], [69.9, 691.0], [70.0, 691.0], [70.1, 691.0], [70.2, 691.0], [70.3, 691.0], [70.4, 691.0], [70.5, 692.0], [70.6, 692.0], [70.7, 692.0], [70.8, 692.0], [70.9, 692.0], [71.0, 693.0], [71.1, 693.0], [71.2, 694.0], [71.3, 694.0], [71.4, 694.0], [71.5, 694.0], [71.6, 696.0], [71.7, 696.0], [71.8, 696.0], [71.9, 696.0], [72.0, 696.0], [72.1, 697.0], [72.2, 697.0], [72.3, 697.0], [72.4, 697.0], [72.5, 697.0], [72.6, 697.0], [72.7, 697.0], [72.8, 697.0], [72.9, 697.0], [73.0, 697.0], [73.1, 697.0], [73.2, 698.0], [73.3, 698.0], [73.4, 698.0], [73.5, 698.0], [73.6, 698.0], [73.7, 698.0], [73.8, 698.0], [73.9, 698.0], [74.0, 698.0], [74.1, 699.0], [74.2, 699.0], [74.3, 699.0], [74.4, 699.0], [74.5, 700.0], [74.6, 700.0], [74.7, 700.0], [74.8, 700.0], [74.9, 700.0], [75.0, 700.0], [75.1, 700.0], [75.2, 701.0], [75.3, 701.0], [75.4, 702.0], [75.5, 702.0], [75.6, 703.0], [75.7, 703.0], [75.8, 704.0], [75.9, 704.0], [76.0, 704.0], [76.1, 704.0], [76.2, 704.0], [76.3, 704.0], [76.4, 704.0], [76.5, 705.0], [76.6, 705.0], [76.7, 707.0], [76.8, 707.0], [76.9, 708.0], [77.0, 708.0], [77.1, 708.0], [77.2, 708.0], [77.3, 708.0], [77.4, 708.0], [77.5, 708.0], [77.6, 708.0], [77.7, 708.0], [77.8, 708.0], [77.9, 708.0], [78.0, 709.0], [78.1, 709.0], [78.2, 710.0], [78.3, 710.0], [78.4, 710.0], [78.5, 711.0], [78.6, 711.0], [78.7, 712.0], [78.8, 712.0], [78.9, 713.0], [79.0, 713.0], [79.1, 714.0], [79.2, 714.0], [79.3, 714.0], [79.4, 714.0], [79.5, 714.0], [79.6, 718.0], [79.7, 718.0], [79.8, 719.0], [79.9, 719.0], [80.0, 720.0], [80.1, 720.0], [80.2, 721.0], [80.3, 721.0], [80.4, 723.0], [80.5, 723.0], [80.6, 723.0], [80.7, 727.0], [80.8, 727.0], [80.9, 728.0], [81.0, 728.0], [81.1, 731.0], [81.2, 731.0], [81.3, 737.0], [81.4, 737.0], [81.5, 740.0], [81.6, 740.0], [81.7, 740.0], [81.8, 741.0], [81.9, 741.0], [82.0, 742.0], [82.1, 742.0], [82.2, 751.0], [82.3, 751.0], [82.4, 756.0], [82.5, 756.0], [82.6, 765.0], [82.7, 765.0], [82.8, 765.0], [82.9, 767.0], [83.0, 767.0], [83.1, 768.0], [83.2, 768.0], [83.3, 773.0], [83.4, 773.0], [83.5, 773.0], [83.6, 773.0], [83.7, 773.0], [83.8, 774.0], [83.9, 774.0], [84.0, 775.0], [84.1, 775.0], [84.2, 776.0], [84.3, 776.0], [84.4, 778.0], [84.5, 778.0], [84.6, 778.0], [84.7, 778.0], [84.8, 778.0], [84.9, 778.0], [85.0, 778.0], [85.1, 781.0], [85.2, 781.0], [85.3, 782.0], [85.4, 782.0], [85.5, 783.0], [85.6, 783.0], [85.7, 783.0], [85.8, 783.0], [85.9, 783.0], [86.0, 784.0], [86.1, 784.0], [86.2, 784.0], [86.3, 784.0], [86.4, 785.0], [86.5, 785.0], [86.6, 787.0], [86.7, 787.0], [86.8, 787.0], [86.9, 787.0], [87.0, 787.0], [87.1, 788.0], [87.2, 788.0], [87.3, 788.0], [87.4, 788.0], [87.5, 789.0], [87.6, 789.0], [87.7, 789.0], [87.8, 789.0], [87.9, 790.0], [88.0, 790.0], [88.1, 790.0], [88.2, 792.0], [88.3, 792.0], [88.4, 792.0], [88.5, 792.0], [88.6, 793.0], [88.7, 793.0], [88.8, 793.0], [88.9, 793.0], [89.0, 794.0], [89.1, 794.0], [89.2, 794.0], [89.3, 794.0], [89.4, 794.0], [89.5, 795.0], [89.6, 795.0], [89.7, 796.0], [89.8, 796.0], [89.9, 796.0], [90.0, 796.0], [90.1, 801.0], [90.2, 801.0], [90.3, 801.0], [90.4, 804.0], [90.5, 804.0], [90.6, 804.0], [90.7, 804.0], [90.8, 805.0], [90.9, 805.0], [91.0, 807.0], [91.1, 807.0], [91.2, 812.0], [91.3, 812.0], [91.4, 812.0], [91.5, 815.0], [91.6, 815.0], [91.7, 815.0], [91.8, 815.0], [91.9, 821.0], [92.0, 821.0], [92.1, 850.0], [92.2, 850.0], [92.3, 876.0], [92.4, 876.0], [92.5, 876.0], [92.6, 876.0], [92.7, 876.0], [92.8, 878.0], [92.9, 878.0], [93.0, 879.0], [93.1, 879.0], [93.2, 888.0], [93.3, 888.0], [93.4, 890.0], [93.5, 890.0], [93.6, 890.0], [93.7, 894.0], [93.8, 894.0], [93.9, 897.0], [94.0, 897.0], [94.1, 898.0], [94.2, 898.0], [94.3, 907.0], [94.4, 907.0], [94.5, 924.0], [94.6, 924.0], [94.7, 924.0], [94.8, 927.0], [94.9, 927.0], [95.0, 947.0], [95.1, 947.0], [95.2, 968.0], [95.3, 968.0], [95.4, 976.0], [95.5, 976.0], [95.6, 979.0], [95.7, 979.0], [95.8, 979.0], [95.9, 986.0], [96.0, 986.0], [96.1, 989.0], [96.2, 989.0], [96.3, 993.0], [96.4, 993.0], [96.5, 998.0], [96.6, 998.0], [96.7, 1082.0], [96.8, 1082.0], [96.9, 1082.0], [97.0, 1092.0], [97.1, 1092.0], [97.2, 1139.0], [97.3, 1139.0], [97.4, 1149.0], [97.5, 1149.0], [97.6, 1181.0], [97.7, 1181.0], [97.8, 1205.0], [97.9, 1205.0], [98.0, 1205.0], [98.1, 1272.0], [98.2, 1272.0], [98.3, 1290.0], [98.4, 1290.0], [98.5, 1394.0], [98.6, 1394.0], [98.7, 2330.0], [98.8, 2330.0], [98.9, 2440.0], [99.0, 2440.0], [99.1, 2440.0], [99.2, 2598.0], [99.3, 2598.0], [99.4, 2749.0], [99.5, 2749.0], [99.6, 3330.0], [99.7, 3330.0], [99.8, 3465.0], [99.9, 3465.0], [100.0, 3465.0]], "isOverall": false, "label": "autorizacionSalida", "isController": false}, {"data": [[0.0, 708.0], [0.1, 708.0], [0.2, 722.0], [0.3, 730.0], [0.4, 731.0], [0.5, 731.0], [0.6, 732.0], [0.7, 732.0], [0.8, 734.0], [0.9, 734.0], [1.0, 734.0], [1.1, 734.0], [1.2, 735.0], [1.3, 735.0], [1.4, 736.0], [1.5, 736.0], [1.6, 736.0], [1.7, 737.0], [1.8, 737.0], [1.9, 739.0], [2.0, 739.0], [2.1, 739.0], [2.2, 740.0], [2.3, 742.0], [2.4, 742.0], [2.5, 742.0], [2.6, 742.0], [2.7, 742.0], [2.8, 742.0], [2.9, 742.0], [3.0, 742.0], [3.1, 742.0], [3.2, 742.0], [3.3, 743.0], [3.4, 743.0], [3.5, 743.0], [3.6, 744.0], [3.7, 744.0], [3.8, 744.0], [3.9, 744.0], [4.0, 744.0], [4.1, 744.0], [4.2, 745.0], [4.3, 745.0], [4.4, 745.0], [4.5, 745.0], [4.6, 745.0], [4.7, 745.0], [4.8, 746.0], [4.9, 746.0], [5.0, 747.0], [5.1, 747.0], [5.2, 747.0], [5.3, 747.0], [5.4, 747.0], [5.5, 747.0], [5.6, 748.0], [5.7, 748.0], [5.8, 748.0], [5.9, 749.0], [6.0, 749.0], [6.1, 749.0], [6.2, 749.0], [6.3, 749.0], [6.4, 750.0], [6.5, 750.0], [6.6, 750.0], [6.7, 750.0], [6.8, 750.0], [6.9, 750.0], [7.0, 750.0], [7.1, 750.0], [7.2, 750.0], [7.3, 751.0], [7.4, 751.0], [7.5, 751.0], [7.6, 751.0], [7.7, 751.0], [7.8, 751.0], [7.9, 752.0], [8.0, 752.0], [8.1, 752.0], [8.2, 752.0], [8.3, 752.0], [8.4, 752.0], [8.5, 753.0], [8.6, 753.0], [8.7, 753.0], [8.8, 753.0], [8.9, 753.0], [9.0, 753.0], [9.1, 753.0], [9.2, 753.0], [9.3, 753.0], [9.4, 753.0], [9.5, 753.0], [9.6, 753.0], [9.7, 753.0], [9.8, 754.0], [9.9, 754.0], [10.0, 754.0], [10.1, 754.0], [10.2, 754.0], [10.3, 755.0], [10.4, 755.0], [10.5, 755.0], [10.6, 756.0], [10.7, 756.0], [10.8, 756.0], [10.9, 757.0], [11.0, 757.0], [11.1, 757.0], [11.2, 757.0], [11.3, 757.0], [11.4, 757.0], [11.5, 757.0], [11.6, 757.0], [11.7, 757.0], [11.8, 757.0], [11.9, 758.0], [12.0, 758.0], [12.1, 758.0], [12.2, 758.0], [12.3, 758.0], [12.4, 758.0], [12.5, 758.0], [12.6, 759.0], [12.7, 759.0], [12.8, 759.0], [12.9, 759.0], [13.0, 759.0], [13.1, 759.0], [13.2, 759.0], [13.3, 759.0], [13.4, 759.0], [13.5, 759.0], [13.6, 759.0], [13.7, 759.0], [13.8, 760.0], [13.9, 760.0], [14.0, 760.0], [14.1, 760.0], [14.2, 760.0], [14.3, 760.0], [14.4, 761.0], [14.5, 761.0], [14.6, 761.0], [14.7, 761.0], [14.8, 761.0], [14.9, 762.0], [15.0, 762.0], [15.1, 762.0], [15.2, 762.0], [15.3, 762.0], [15.4, 762.0], [15.5, 762.0], [15.6, 763.0], [15.7, 763.0], [15.8, 763.0], [15.9, 763.0], [16.0, 763.0], [16.1, 763.0], [16.2, 764.0], [16.3, 764.0], [16.4, 764.0], [16.5, 764.0], [16.6, 764.0], [16.7, 765.0], [16.8, 765.0], [16.9, 765.0], [17.0, 765.0], [17.1, 765.0], [17.2, 765.0], [17.3, 766.0], [17.4, 766.0], [17.5, 766.0], [17.6, 766.0], [17.7, 767.0], [17.8, 767.0], [17.9, 767.0], [18.0, 767.0], [18.1, 767.0], [18.2, 767.0], [18.3, 767.0], [18.4, 768.0], [18.5, 768.0], [18.6, 768.0], [18.7, 768.0], [18.8, 768.0], [18.9, 770.0], [19.0, 770.0], [19.1, 770.0], [19.2, 770.0], [19.3, 770.0], [19.4, 771.0], [19.5, 771.0], [19.6, 771.0], [19.7, 771.0], [19.8, 771.0], [19.9, 771.0], [20.0, 771.0], [20.1, 771.0], [20.2, 772.0], [20.3, 772.0], [20.4, 772.0], [20.5, 772.0], [20.6, 772.0], [20.7, 772.0], [20.8, 773.0], [20.9, 773.0], [21.0, 773.0], [21.1, 773.0], [21.2, 773.0], [21.3, 773.0], [21.4, 774.0], [21.5, 775.0], [21.6, 775.0], [21.7, 775.0], [21.8, 775.0], [21.9, 775.0], [22.0, 776.0], [22.1, 776.0], [22.2, 776.0], [22.3, 776.0], [22.4, 776.0], [22.5, 777.0], [22.6, 777.0], [22.7, 777.0], [22.8, 777.0], [22.9, 777.0], [23.0, 777.0], [23.1, 777.0], [23.2, 778.0], [23.3, 778.0], [23.4, 778.0], [23.5, 778.0], [23.6, 778.0], [23.7, 778.0], [23.8, 778.0], [23.9, 778.0], [24.0, 778.0], [24.1, 779.0], [24.2, 779.0], [24.3, 779.0], [24.4, 779.0], [24.5, 779.0], [24.6, 779.0], [24.7, 779.0], [24.8, 779.0], [24.9, 779.0], [25.0, 780.0], [25.1, 780.0], [25.2, 780.0], [25.3, 780.0], [25.4, 780.0], [25.5, 780.0], [25.6, 780.0], [25.7, 781.0], [25.8, 781.0], [25.9, 781.0], [26.0, 781.0], [26.1, 781.0], [26.2, 782.0], [26.3, 782.0], [26.4, 782.0], [26.5, 782.0], [26.6, 782.0], [26.7, 783.0], [26.8, 783.0], [26.9, 783.0], [27.0, 784.0], [27.1, 784.0], [27.2, 784.0], [27.3, 784.0], [27.4, 784.0], [27.5, 784.0], [27.6, 784.0], [27.7, 784.0], [27.8, 784.0], [27.9, 784.0], [28.0, 784.0], [28.1, 785.0], [28.2, 785.0], [28.3, 785.0], [28.4, 785.0], [28.5, 785.0], [28.6, 785.0], [28.7, 785.0], [28.8, 785.0], [28.9, 786.0], [29.0, 786.0], [29.1, 786.0], [29.2, 786.0], [29.3, 786.0], [29.4, 787.0], [29.5, 787.0], [29.6, 787.0], [29.7, 787.0], [29.8, 787.0], [29.9, 787.0], [30.0, 787.0], [30.1, 787.0], [30.2, 787.0], [30.3, 787.0], [30.4, 787.0], [30.5, 788.0], [30.6, 788.0], [30.7, 788.0], [30.8, 788.0], [30.9, 788.0], [31.0, 788.0], [31.1, 788.0], [31.2, 788.0], [31.3, 788.0], [31.4, 788.0], [31.5, 788.0], [31.6, 788.0], [31.7, 788.0], [31.8, 788.0], [31.9, 789.0], [32.0, 789.0], [32.1, 789.0], [32.2, 789.0], [32.3, 789.0], [32.4, 789.0], [32.5, 789.0], [32.6, 789.0], [32.7, 789.0], [32.8, 789.0], [32.9, 789.0], [33.0, 789.0], [33.1, 789.0], [33.2, 790.0], [33.3, 790.0], [33.4, 790.0], [33.5, 790.0], [33.6, 790.0], [33.7, 790.0], [33.8, 790.0], [33.9, 790.0], [34.0, 790.0], [34.1, 790.0], [34.2, 790.0], [34.3, 791.0], [34.4, 791.0], [34.5, 791.0], [34.6, 791.0], [34.7, 791.0], [34.8, 791.0], [34.9, 791.0], [35.0, 791.0], [35.1, 791.0], [35.2, 791.0], [35.3, 791.0], [35.4, 791.0], [35.5, 791.0], [35.6, 792.0], [35.7, 792.0], [35.8, 792.0], [35.9, 792.0], [36.0, 792.0], [36.1, 792.0], [36.2, 792.0], [36.3, 792.0], [36.4, 792.0], [36.5, 792.0], [36.6, 792.0], [36.7, 793.0], [36.8, 793.0], [36.9, 793.0], [37.0, 793.0], [37.1, 793.0], [37.2, 793.0], [37.3, 793.0], [37.4, 793.0], [37.5, 793.0], [37.6, 793.0], [37.7, 793.0], [37.8, 793.0], [37.9, 793.0], [38.0, 793.0], [38.1, 793.0], [38.2, 793.0], [38.3, 793.0], [38.4, 793.0], [38.5, 793.0], [38.6, 794.0], [38.7, 794.0], [38.8, 794.0], [38.9, 794.0], [39.0, 794.0], [39.1, 794.0], [39.2, 794.0], [39.3, 794.0], [39.4, 794.0], [39.5, 794.0], [39.6, 794.0], [39.7, 794.0], [39.8, 794.0], [39.9, 794.0], [40.0, 794.0], [40.1, 794.0], [40.2, 795.0], [40.3, 795.0], [40.4, 795.0], [40.5, 795.0], [40.6, 795.0], [40.7, 795.0], [40.8, 795.0], [40.9, 795.0], [41.0, 795.0], [41.1, 795.0], [41.2, 795.0], [41.3, 795.0], [41.4, 795.0], [41.5, 795.0], [41.6, 795.0], [41.7, 796.0], [41.8, 796.0], [41.9, 796.0], [42.0, 796.0], [42.1, 796.0], [42.2, 796.0], [42.3, 796.0], [42.4, 796.0], [42.5, 796.0], [42.6, 796.0], [42.7, 796.0], [42.8, 796.0], [42.9, 796.0], [43.0, 796.0], [43.1, 797.0], [43.2, 797.0], [43.3, 797.0], [43.4, 797.0], [43.5, 797.0], [43.6, 797.0], [43.7, 797.0], [43.8, 797.0], [43.9, 797.0], [44.0, 797.0], [44.1, 797.0], [44.2, 797.0], [44.3, 797.0], [44.4, 797.0], [44.5, 797.0], [44.6, 797.0], [44.7, 797.0], [44.8, 797.0], [44.9, 797.0], [45.0, 797.0], [45.1, 797.0], [45.2, 797.0], [45.3, 798.0], [45.4, 798.0], [45.5, 798.0], [45.6, 798.0], [45.7, 798.0], [45.8, 798.0], [45.9, 798.0], [46.0, 798.0], [46.1, 798.0], [46.2, 798.0], [46.3, 798.0], [46.4, 798.0], [46.5, 798.0], [46.6, 798.0], [46.7, 798.0], [46.8, 798.0], [46.9, 798.0], [47.0, 798.0], [47.1, 798.0], [47.2, 799.0], [47.3, 799.0], [47.4, 799.0], [47.5, 799.0], [47.6, 799.0], [47.7, 799.0], [47.8, 799.0], [47.9, 799.0], [48.0, 799.0], [48.1, 799.0], [48.2, 799.0], [48.3, 799.0], [48.4, 800.0], [48.5, 800.0], [48.6, 800.0], [48.7, 800.0], [48.8, 800.0], [48.9, 800.0], [49.0, 800.0], [49.1, 800.0], [49.2, 800.0], [49.3, 800.0], [49.4, 800.0], [49.5, 800.0], [49.6, 800.0], [49.7, 800.0], [49.8, 800.0], [49.9, 801.0], [50.0, 801.0], [50.1, 801.0], [50.2, 801.0], [50.3, 801.0], [50.4, 801.0], [50.5, 801.0], [50.6, 801.0], [50.7, 801.0], [50.8, 801.0], [50.9, 801.0], [51.0, 801.0], [51.1, 801.0], [51.2, 802.0], [51.3, 802.0], [51.4, 802.0], [51.5, 802.0], [51.6, 802.0], [51.7, 802.0], [51.8, 802.0], [51.9, 802.0], [52.0, 802.0], [52.1, 802.0], [52.2, 802.0], [52.3, 802.0], [52.4, 802.0], [52.5, 803.0], [52.6, 803.0], [52.7, 803.0], [52.8, 803.0], [52.9, 803.0], [53.0, 803.0], [53.1, 803.0], [53.2, 803.0], [53.3, 803.0], [53.4, 803.0], [53.5, 803.0], [53.6, 803.0], [53.7, 803.0], [53.8, 803.0], [53.9, 803.0], [54.0, 803.0], [54.1, 803.0], [54.2, 803.0], [54.3, 803.0], [54.4, 803.0], [54.5, 803.0], [54.6, 803.0], [54.7, 803.0], [54.8, 804.0], [54.9, 804.0], [55.0, 804.0], [55.1, 804.0], [55.2, 804.0], [55.3, 804.0], [55.4, 804.0], [55.5, 804.0], [55.6, 804.0], [55.7, 804.0], [55.8, 804.0], [55.9, 804.0], [56.0, 804.0], [56.1, 804.0], [56.2, 804.0], [56.3, 804.0], [56.4, 804.0], [56.5, 804.0], [56.6, 804.0], [56.7, 804.0], [56.8, 805.0], [56.9, 805.0], [57.0, 805.0], [57.1, 805.0], [57.2, 805.0], [57.3, 805.0], [57.4, 805.0], [57.5, 805.0], [57.6, 805.0], [57.7, 805.0], [57.8, 805.0], [57.9, 805.0], [58.0, 805.0], [58.1, 805.0], [58.2, 805.0], [58.3, 806.0], [58.4, 806.0], [58.5, 806.0], [58.6, 806.0], [58.7, 806.0], [58.8, 806.0], [58.9, 806.0], [59.0, 806.0], [59.1, 806.0], [59.2, 807.0], [59.3, 807.0], [59.4, 807.0], [59.5, 807.0], [59.6, 807.0], [59.7, 807.0], [59.8, 807.0], [59.9, 807.0], [60.0, 807.0], [60.1, 807.0], [60.2, 807.0], [60.3, 808.0], [60.4, 808.0], [60.5, 808.0], [60.6, 808.0], [60.7, 808.0], [60.8, 808.0], [60.9, 808.0], [61.0, 808.0], [61.1, 808.0], [61.2, 808.0], [61.3, 808.0], [61.4, 808.0], [61.5, 808.0], [61.6, 808.0], [61.7, 809.0], [61.8, 809.0], [61.9, 809.0], [62.0, 809.0], [62.1, 809.0], [62.2, 809.0], [62.3, 809.0], [62.4, 809.0], [62.5, 809.0], [62.6, 809.0], [62.7, 809.0], [62.8, 809.0], [62.9, 810.0], [63.0, 810.0], [63.1, 810.0], [63.2, 810.0], [63.3, 810.0], [63.4, 810.0], [63.5, 810.0], [63.6, 810.0], [63.7, 810.0], [63.8, 810.0], [63.9, 810.0], [64.0, 810.0], [64.1, 810.0], [64.2, 810.0], [64.3, 811.0], [64.4, 811.0], [64.5, 811.0], [64.6, 811.0], [64.7, 811.0], [64.8, 811.0], [64.9, 811.0], [65.0, 811.0], [65.1, 812.0], [65.2, 812.0], [65.3, 812.0], [65.4, 812.0], [65.5, 812.0], [65.6, 812.0], [65.7, 812.0], [65.8, 812.0], [65.9, 812.0], [66.0, 812.0], [66.1, 812.0], [66.2, 812.0], [66.3, 812.0], [66.4, 812.0], [66.5, 813.0], [66.6, 813.0], [66.7, 813.0], [66.8, 813.0], [66.9, 813.0], [67.0, 813.0], [67.1, 813.0], [67.2, 813.0], [67.3, 813.0], [67.4, 813.0], [67.5, 814.0], [67.6, 814.0], [67.7, 814.0], [67.8, 814.0], [67.9, 814.0], [68.0, 814.0], [68.1, 814.0], [68.2, 814.0], [68.3, 815.0], [68.4, 815.0], [68.5, 815.0], [68.6, 815.0], [68.7, 815.0], [68.8, 815.0], [68.9, 815.0], [69.0, 815.0], [69.1, 815.0], [69.2, 815.0], [69.3, 816.0], [69.4, 816.0], [69.5, 816.0], [69.6, 816.0], [69.7, 816.0], [69.8, 816.0], [69.9, 816.0], [70.0, 816.0], [70.1, 817.0], [70.2, 818.0], [70.3, 818.0], [70.4, 818.0], [70.5, 818.0], [70.6, 818.0], [70.7, 818.0], [70.8, 818.0], [70.9, 818.0], [71.0, 818.0], [71.1, 818.0], [71.2, 819.0], [71.3, 819.0], [71.4, 819.0], [71.5, 819.0], [71.6, 819.0], [71.7, 820.0], [71.8, 820.0], [71.9, 820.0], [72.0, 820.0], [72.1, 820.0], [72.2, 820.0], [72.3, 820.0], [72.4, 820.0], [72.5, 821.0], [72.6, 821.0], [72.7, 821.0], [72.8, 821.0], [72.9, 821.0], [73.0, 821.0], [73.1, 822.0], [73.2, 823.0], [73.3, 823.0], [73.4, 823.0], [73.5, 823.0], [73.6, 823.0], [73.7, 824.0], [73.8, 824.0], [73.9, 824.0], [74.0, 824.0], [74.1, 825.0], [74.2, 825.0], [74.3, 825.0], [74.4, 825.0], [74.5, 825.0], [74.6, 825.0], [74.7, 826.0], [74.8, 826.0], [74.9, 826.0], [75.0, 826.0], [75.1, 826.0], [75.2, 826.0], [75.3, 827.0], [75.4, 827.0], [75.5, 827.0], [75.6, 827.0], [75.7, 827.0], [75.8, 828.0], [75.9, 828.0], [76.0, 829.0], [76.1, 829.0], [76.2, 830.0], [76.3, 830.0], [76.4, 831.0], [76.5, 831.0], [76.6, 831.0], [76.7, 832.0], [76.8, 833.0], [76.9, 833.0], [77.0, 834.0], [77.1, 834.0], [77.2, 836.0], [77.3, 836.0], [77.4, 836.0], [77.5, 837.0], [77.6, 837.0], [77.7, 837.0], [77.8, 838.0], [77.9, 838.0], [78.0, 840.0], [78.1, 840.0], [78.2, 841.0], [78.3, 841.0], [78.4, 842.0], [78.5, 845.0], [78.6, 845.0], [78.7, 845.0], [78.8, 845.0], [78.9, 847.0], [79.0, 847.0], [79.1, 849.0], [79.2, 850.0], [79.3, 853.0], [79.4, 857.0], [79.5, 857.0], [79.6, 860.0], [79.7, 862.0], [79.8, 868.0], [79.9, 869.0], [80.0, 870.0], [80.1, 871.0], [80.2, 871.0], [80.3, 872.0], [80.4, 873.0], [80.5, 873.0], [80.6, 874.0], [80.7, 875.0], [80.8, 876.0], [80.9, 877.0], [81.0, 878.0], [81.1, 878.0], [81.2, 879.0], [81.3, 879.0], [81.4, 879.0], [81.5, 880.0], [81.6, 880.0], [81.7, 880.0], [81.8, 881.0], [81.9, 881.0], [82.0, 881.0], [82.1, 881.0], [82.2, 881.0], [82.3, 881.0], [82.4, 881.0], [82.5, 882.0], [82.6, 882.0], [82.7, 882.0], [82.8, 882.0], [82.9, 883.0], [83.0, 883.0], [83.1, 883.0], [83.2, 883.0], [83.3, 884.0], [83.4, 884.0], [83.5, 884.0], [83.6, 885.0], [83.7, 885.0], [83.8, 885.0], [83.9, 885.0], [84.0, 885.0], [84.1, 885.0], [84.2, 886.0], [84.3, 886.0], [84.4, 886.0], [84.5, 886.0], [84.6, 886.0], [84.7, 886.0], [84.8, 887.0], [84.9, 887.0], [85.0, 887.0], [85.1, 888.0], [85.2, 888.0], [85.3, 888.0], [85.4, 888.0], [85.5, 889.0], [85.6, 889.0], [85.7, 889.0], [85.8, 889.0], [85.9, 890.0], [86.0, 890.0], [86.1, 890.0], [86.2, 890.0], [86.3, 890.0], [86.4, 890.0], [86.5, 891.0], [86.6, 891.0], [86.7, 891.0], [86.8, 891.0], [86.9, 891.0], [87.0, 892.0], [87.1, 892.0], [87.2, 893.0], [87.3, 893.0], [87.4, 893.0], [87.5, 893.0], [87.6, 893.0], [87.7, 893.0], [87.8, 893.0], [87.9, 894.0], [88.0, 894.0], [88.1, 895.0], [88.2, 895.0], [88.3, 895.0], [88.4, 896.0], [88.5, 896.0], [88.6, 896.0], [88.7, 896.0], [88.8, 896.0], [88.9, 896.0], [89.0, 897.0], [89.1, 897.0], [89.2, 897.0], [89.3, 897.0], [89.4, 897.0], [89.5, 897.0], [89.6, 898.0], [89.7, 899.0], [89.8, 899.0], [89.9, 899.0], [90.0, 899.0], [90.1, 899.0], [90.2, 899.0], [90.3, 900.0], [90.4, 902.0], [90.5, 902.0], [90.6, 903.0], [90.7, 903.0], [90.8, 903.0], [90.9, 903.0], [91.0, 903.0], [91.1, 904.0], [91.2, 904.0], [91.3, 904.0], [91.4, 904.0], [91.5, 905.0], [91.6, 905.0], [91.7, 908.0], [91.8, 908.0], [91.9, 909.0], [92.0, 909.0], [92.1, 910.0], [92.2, 910.0], [92.3, 910.0], [92.4, 911.0], [92.5, 912.0], [92.6, 913.0], [92.7, 914.0], [92.8, 915.0], [92.9, 916.0], [93.0, 919.0], [93.1, 920.0], [93.2, 933.0], [93.3, 957.0], [93.4, 966.0], [93.5, 976.0], [93.6, 977.0], [93.7, 978.0], [93.8, 979.0], [93.9, 981.0], [94.0, 985.0], [94.1, 986.0], [94.2, 987.0], [94.3, 987.0], [94.4, 988.0], [94.5, 989.0], [94.6, 989.0], [94.7, 989.0], [94.8, 989.0], [94.9, 992.0], [95.0, 994.0], [95.1, 999.0], [95.2, 999.0], [95.3, 999.0], [95.4, 1000.0], [95.5, 1000.0], [95.6, 1001.0], [95.7, 1003.0], [95.8, 1003.0], [95.9, 1004.0], [96.0, 1005.0], [96.1, 1006.0], [96.2, 1010.0], [96.3, 1011.0], [96.4, 1014.0], [96.5, 1023.0], [96.6, 1026.0], [96.7, 1070.0], [96.8, 1086.0], [96.9, 1089.0], [97.0, 1094.0], [97.1, 1145.0], [97.2, 1180.0], [97.3, 1196.0], [97.4, 1196.0], [97.5, 1207.0], [97.6, 1249.0], [97.7, 1281.0], [97.8, 1285.0], [97.9, 1290.0], [98.0, 1291.0], [98.1, 1296.0], [98.2, 1310.0], [98.3, 1321.0], [98.4, 1383.0], [98.5, 1398.0], [98.6, 1486.0], [98.7, 1518.0], [98.8, 1593.0], [98.9, 1997.0], [99.0, 2192.0], [99.1, 2333.0], [99.2, 2384.0], [99.3, 2429.0], [99.4, 2563.0], [99.5, 2629.0], [99.6, 2674.0], [99.7, 2696.0], [99.8, 4312.0], [99.9, 4419.0], [100.0, 4419.0]], "isOverall": false, "label": "preAutorizacionPlacasNoFlypass", "isController": false}, {"data": [[0.0, 111.0], [0.1, 111.0], [0.2, 111.0], [0.3, 111.0], [0.4, 111.0], [0.5, 111.0], [0.6, 111.0], [0.7, 111.0], [0.8, 111.0], [0.9, 111.0], [1.0, 111.0], [1.1, 112.0], [1.2, 112.0], [1.3, 112.0], [1.4, 112.0], [1.5, 112.0], [1.6, 112.0], [1.7, 112.0], [1.8, 113.0], [1.9, 113.0], [2.0, 113.0], [2.1, 113.0], [2.2, 113.0], [2.3, 113.0], [2.4, 113.0], [2.5, 114.0], [2.6, 114.0], [2.7, 114.0], [2.8, 114.0], [2.9, 114.0], [3.0, 114.0], [3.1, 114.0], [3.2, 115.0], [3.3, 115.0], [3.4, 115.0], [3.5, 115.0], [3.6, 115.0], [3.7, 115.0], [3.8, 115.0], [3.9, 116.0], [4.0, 116.0], [4.1, 116.0], [4.2, 117.0], [4.3, 117.0], [4.4, 117.0], [4.5, 118.0], [4.6, 118.0], [4.7, 118.0], [4.8, 118.0], [4.9, 118.0], [5.0, 118.0], [5.1, 118.0], [5.2, 118.0], [5.3, 118.0], [5.4, 118.0], [5.5, 118.0], [5.6, 118.0], [5.7, 118.0], [5.8, 118.0], [5.9, 118.0], [6.0, 118.0], [6.1, 118.0], [6.2, 118.0], [6.3, 119.0], [6.4, 119.0], [6.5, 119.0], [6.6, 119.0], [6.7, 119.0], [6.8, 119.0], [6.9, 119.0], [7.0, 119.0], [7.1, 119.0], [7.2, 119.0], [7.3, 120.0], [7.4, 120.0], [7.5, 120.0], [7.6, 120.0], [7.7, 120.0], [7.8, 120.0], [7.9, 120.0], [8.0, 120.0], [8.1, 120.0], [8.2, 120.0], [8.3, 120.0], [8.4, 120.0], [8.5, 120.0], [8.6, 120.0], [8.7, 121.0], [8.8, 121.0], [8.9, 121.0], [9.0, 121.0], [9.1, 121.0], [9.2, 121.0], [9.3, 121.0], [9.4, 122.0], [9.5, 122.0], [9.6, 122.0], [9.7, 122.0], [9.8, 122.0], [9.9, 122.0], [10.0, 122.0], [10.1, 122.0], [10.2, 122.0], [10.3, 122.0], [10.4, 122.0], [10.5, 122.0], [10.6, 122.0], [10.7, 122.0], [10.8, 122.0], [10.9, 122.0], [11.0, 122.0], [11.1, 123.0], [11.2, 123.0], [11.3, 123.0], [11.4, 123.0], [11.5, 123.0], [11.6, 123.0], [11.7, 123.0], [11.8, 123.0], [11.9, 123.0], [12.0, 123.0], [12.1, 123.0], [12.2, 123.0], [12.3, 123.0], [12.4, 123.0], [12.5, 123.0], [12.6, 123.0], [12.7, 123.0], [12.8, 123.0], [12.9, 124.0], [13.0, 124.0], [13.1, 124.0], [13.2, 124.0], [13.3, 124.0], [13.4, 124.0], [13.5, 125.0], [13.6, 125.0], [13.7, 125.0], [13.8, 125.0], [13.9, 125.0], [14.0, 125.0], [14.1, 125.0], [14.2, 125.0], [14.3, 125.0], [14.4, 125.0], [14.5, 125.0], [14.6, 125.0], [14.7, 125.0], [14.8, 125.0], [14.9, 125.0], [15.0, 125.0], [15.1, 125.0], [15.2, 125.0], [15.3, 125.0], [15.4, 125.0], [15.5, 125.0], [15.6, 125.0], [15.7, 125.0], [15.8, 125.0], [15.9, 125.0], [16.0, 125.0], [16.1, 125.0], [16.2, 125.0], [16.3, 125.0], [16.4, 125.0], [16.5, 125.0], [16.6, 125.0], [16.7, 126.0], [16.8, 126.0], [16.9, 126.0], [17.0, 126.0], [17.1, 126.0], [17.2, 126.0], [17.3, 126.0], [17.4, 126.0], [17.5, 126.0], [17.6, 126.0], [17.7, 126.0], [17.8, 126.0], [17.9, 126.0], [18.0, 126.0], [18.1, 126.0], [18.2, 126.0], [18.3, 126.0], [18.4, 127.0], [18.5, 127.0], [18.6, 127.0], [18.7, 127.0], [18.8, 127.0], [18.9, 127.0], [19.0, 127.0], [19.1, 127.0], [19.2, 127.0], [19.3, 127.0], [19.4, 127.0], [19.5, 127.0], [19.6, 127.0], [19.7, 127.0], [19.8, 128.0], [19.9, 128.0], [20.0, 128.0], [20.1, 128.0], [20.2, 128.0], [20.3, 128.0], [20.4, 128.0], [20.5, 128.0], [20.6, 128.0], [20.7, 128.0], [20.8, 128.0], [20.9, 128.0], [21.0, 128.0], [21.1, 128.0], [21.2, 128.0], [21.3, 128.0], [21.4, 128.0], [21.5, 129.0], [21.6, 129.0], [21.7, 129.0], [21.8, 129.0], [21.9, 129.0], [22.0, 129.0], [22.1, 129.0], [22.2, 129.0], [22.3, 129.0], [22.4, 129.0], [22.5, 129.0], [22.6, 129.0], [22.7, 129.0], [22.8, 129.0], [22.9, 129.0], [23.0, 129.0], [23.1, 129.0], [23.2, 129.0], [23.3, 129.0], [23.4, 129.0], [23.5, 129.0], [23.6, 130.0], [23.7, 130.0], [23.8, 130.0], [23.9, 130.0], [24.0, 130.0], [24.1, 130.0], [24.2, 130.0], [24.3, 130.0], [24.4, 130.0], [24.5, 130.0], [24.6, 130.0], [24.7, 130.0], [24.8, 130.0], [24.9, 130.0], [25.0, 130.0], [25.1, 130.0], [25.2, 130.0], [25.3, 130.0], [25.4, 130.0], [25.5, 130.0], [25.6, 130.0], [25.7, 130.0], [25.8, 130.0], [25.9, 130.0], [26.0, 130.0], [26.1, 130.0], [26.2, 130.0], [26.3, 130.0], [26.4, 130.0], [26.5, 130.0], [26.6, 130.0], [26.7, 130.0], [26.8, 130.0], [26.9, 130.0], [27.0, 131.0], [27.1, 131.0], [27.2, 131.0], [27.3, 131.0], [27.4, 131.0], [27.5, 131.0], [27.6, 131.0], [27.7, 131.0], [27.8, 131.0], [27.9, 131.0], [28.0, 131.0], [28.1, 131.0], [28.2, 131.0], [28.3, 131.0], [28.4, 131.0], [28.5, 131.0], [28.6, 131.0], [28.7, 131.0], [28.8, 132.0], [28.9, 132.0], [29.0, 132.0], [29.1, 132.0], [29.2, 132.0], [29.3, 132.0], [29.4, 132.0], [29.5, 132.0], [29.6, 132.0], [29.7, 132.0], [29.8, 132.0], [29.9, 132.0], [30.0, 132.0], [30.1, 132.0], [30.2, 132.0], [30.3, 132.0], [30.4, 132.0], [30.5, 132.0], [30.6, 132.0], [30.7, 132.0], [30.8, 133.0], [30.9, 133.0], [31.0, 133.0], [31.1, 133.0], [31.2, 133.0], [31.3, 133.0], [31.4, 133.0], [31.5, 134.0], [31.6, 134.0], [31.7, 134.0], [31.8, 134.0], [31.9, 134.0], [32.0, 134.0], [32.1, 134.0], [32.2, 134.0], [32.3, 134.0], [32.4, 134.0], [32.5, 134.0], [32.6, 134.0], [32.7, 134.0], [32.8, 134.0], [32.9, 134.0], [33.0, 134.0], [33.1, 134.0], [33.2, 134.0], [33.3, 134.0], [33.4, 134.0], [33.5, 134.0], [33.6, 134.0], [33.7, 134.0], [33.8, 134.0], [33.9, 134.0], [34.0, 134.0], [34.1, 134.0], [34.2, 134.0], [34.3, 134.0], [34.4, 134.0], [34.5, 134.0], [34.6, 134.0], [34.7, 134.0], [34.8, 134.0], [34.9, 134.0], [35.0, 134.0], [35.1, 134.0], [35.2, 134.0], [35.3, 134.0], [35.4, 134.0], [35.5, 134.0], [35.6, 134.0], [35.7, 134.0], [35.8, 134.0], [35.9, 134.0], [36.0, 135.0], [36.1, 135.0], [36.2, 135.0], [36.3, 135.0], [36.4, 135.0], [36.5, 135.0], [36.6, 135.0], [36.7, 135.0], [36.8, 135.0], [36.9, 135.0], [37.0, 135.0], [37.1, 135.0], [37.2, 135.0], [37.3, 135.0], [37.4, 135.0], [37.5, 135.0], [37.6, 135.0], [37.7, 135.0], [37.8, 135.0], [37.9, 135.0], [38.0, 135.0], [38.1, 136.0], [38.2, 136.0], [38.3, 136.0], [38.4, 136.0], [38.5, 136.0], [38.6, 136.0], [38.7, 136.0], [38.8, 136.0], [38.9, 136.0], [39.0, 136.0], [39.1, 136.0], [39.2, 136.0], [39.3, 136.0], [39.4, 136.0], [39.5, 136.0], [39.6, 136.0], [39.7, 136.0], [39.8, 136.0], [39.9, 136.0], [40.0, 136.0], [40.1, 136.0], [40.2, 137.0], [40.3, 137.0], [40.4, 137.0], [40.5, 137.0], [40.6, 137.0], [40.7, 137.0], [40.8, 137.0], [40.9, 137.0], [41.0, 137.0], [41.1, 137.0], [41.2, 137.0], [41.3, 137.0], [41.4, 137.0], [41.5, 137.0], [41.6, 138.0], [41.7, 138.0], [41.8, 138.0], [41.9, 138.0], [42.0, 138.0], [42.1, 138.0], [42.2, 138.0], [42.3, 138.0], [42.4, 138.0], [42.5, 138.0], [42.6, 138.0], [42.7, 138.0], [42.8, 138.0], [42.9, 138.0], [43.0, 138.0], [43.1, 138.0], [43.2, 138.0], [43.3, 139.0], [43.4, 139.0], [43.5, 139.0], [43.6, 139.0], [43.7, 139.0], [43.8, 139.0], [43.9, 139.0], [44.0, 139.0], [44.1, 139.0], [44.2, 139.0], [44.3, 139.0], [44.4, 139.0], [44.5, 139.0], [44.6, 139.0], [44.7, 140.0], [44.8, 140.0], [44.9, 140.0], [45.0, 140.0], [45.1, 140.0], [45.2, 140.0], [45.3, 140.0], [45.4, 140.0], [45.5, 140.0], [45.6, 140.0], [45.7, 141.0], [45.8, 141.0], [45.9, 141.0], [46.0, 141.0], [46.1, 141.0], [46.2, 141.0], [46.3, 141.0], [46.4, 141.0], [46.5, 141.0], [46.6, 141.0], [46.7, 141.0], [46.8, 141.0], [46.9, 141.0], [47.0, 141.0], [47.1, 141.0], [47.2, 141.0], [47.3, 141.0], [47.4, 141.0], [47.5, 142.0], [47.6, 142.0], [47.7, 142.0], [47.8, 142.0], [47.9, 142.0], [48.0, 142.0], [48.1, 142.0], [48.2, 142.0], [48.3, 142.0], [48.4, 142.0], [48.5, 142.0], [48.6, 142.0], [48.7, 142.0], [48.8, 142.0], [48.9, 142.0], [49.0, 142.0], [49.1, 142.0], [49.2, 142.0], [49.3, 142.0], [49.4, 142.0], [49.5, 142.0], [49.6, 142.0], [49.7, 142.0], [49.8, 142.0], [49.9, 143.0], [50.0, 143.0], [50.1, 143.0], [50.2, 143.0], [50.3, 143.0], [50.4, 143.0], [50.5, 143.0], [50.6, 143.0], [50.7, 143.0], [50.8, 143.0], [50.9, 143.0], [51.0, 143.0], [51.1, 143.0], [51.2, 143.0], [51.3, 143.0], [51.4, 143.0], [51.5, 143.0], [51.6, 143.0], [51.7, 143.0], [51.8, 143.0], [51.9, 143.0], [52.0, 144.0], [52.1, 144.0], [52.2, 144.0], [52.3, 144.0], [52.4, 144.0], [52.5, 144.0], [52.6, 144.0], [52.7, 144.0], [52.8, 144.0], [52.9, 144.0], [53.0, 144.0], [53.1, 144.0], [53.2, 144.0], [53.3, 145.0], [53.4, 145.0], [53.5, 145.0], [53.6, 145.0], [53.7, 146.0], [53.8, 146.0], [53.9, 146.0], [54.0, 147.0], [54.1, 147.0], [54.2, 147.0], [54.3, 147.0], [54.4, 147.0], [54.5, 147.0], [54.6, 147.0], [54.7, 147.0], [54.8, 147.0], [54.9, 147.0], [55.0, 147.0], [55.1, 149.0], [55.2, 149.0], [55.3, 149.0], [55.4, 149.0], [55.5, 149.0], [55.6, 149.0], [55.7, 149.0], [55.8, 149.0], [55.9, 149.0], [56.0, 149.0], [56.1, 150.0], [56.2, 150.0], [56.3, 150.0], [56.4, 150.0], [56.5, 150.0], [56.6, 150.0], [56.7, 150.0], [56.8, 150.0], [56.9, 150.0], [57.0, 150.0], [57.1, 150.0], [57.2, 150.0], [57.3, 150.0], [57.4, 150.0], [57.5, 150.0], [57.6, 150.0], [57.7, 150.0], [57.8, 150.0], [57.9, 150.0], [58.0, 150.0], [58.1, 150.0], [58.2, 151.0], [58.3, 151.0], [58.4, 151.0], [58.5, 151.0], [58.6, 151.0], [58.7, 151.0], [58.8, 151.0], [58.9, 153.0], [59.0, 153.0], [59.1, 153.0], [59.2, 153.0], [59.3, 153.0], [59.4, 153.0], [59.5, 153.0], [59.6, 154.0], [59.7, 154.0], [59.8, 154.0], [59.9, 155.0], [60.0, 155.0], [60.1, 155.0], [60.2, 155.0], [60.3, 157.0], [60.4, 157.0], [60.5, 157.0], [60.6, 157.0], [60.7, 157.0], [60.8, 157.0], [60.9, 158.0], [61.0, 158.0], [61.1, 158.0], [61.2, 158.0], [61.3, 158.0], [61.4, 158.0], [61.5, 158.0], [61.6, 159.0], [61.7, 159.0], [61.8, 159.0], [61.9, 159.0], [62.0, 159.0], [62.1, 159.0], [62.2, 159.0], [62.3, 159.0], [62.4, 159.0], [62.5, 159.0], [62.6, 159.0], [62.7, 160.0], [62.8, 160.0], [62.9, 160.0], [63.0, 161.0], [63.1, 161.0], [63.2, 161.0], [63.3, 161.0], [63.4, 162.0], [63.5, 162.0], [63.6, 162.0], [63.7, 162.0], [63.8, 162.0], [63.9, 162.0], [64.0, 162.0], [64.1, 165.0], [64.2, 165.0], [64.3, 165.0], [64.4, 167.0], [64.5, 167.0], [64.6, 167.0], [64.7, 167.0], [64.8, 168.0], [64.9, 168.0], [65.0, 168.0], [65.1, 170.0], [65.2, 170.0], [65.3, 170.0], [65.4, 170.0], [65.5, 170.0], [65.6, 170.0], [65.7, 170.0], [65.8, 171.0], [65.9, 171.0], [66.0, 171.0], [66.1, 172.0], [66.2, 172.0], [66.3, 172.0], [66.4, 172.0], [66.5, 172.0], [66.6, 172.0], [66.7, 172.0], [66.8, 176.0], [66.9, 176.0], [67.0, 176.0], [67.1, 176.0], [67.2, 178.0], [67.3, 178.0], [67.4, 178.0], [67.5, 178.0], [67.6, 178.0], [67.7, 178.0], [67.8, 178.0], [67.9, 179.0], [68.0, 179.0], [68.1, 179.0], [68.2, 180.0], [68.3, 180.0], [68.4, 180.0], [68.5, 180.0], [68.6, 180.0], [68.7, 180.0], [68.8, 180.0], [68.9, 182.0], [69.0, 182.0], [69.1, 182.0], [69.2, 182.0], [69.3, 183.0], [69.4, 183.0], [69.5, 183.0], [69.6, 183.0], [69.7, 183.0], [69.8, 183.0], [69.9, 183.0], [70.0, 183.0], [70.1, 183.0], [70.2, 183.0], [70.3, 185.0], [70.4, 185.0], [70.5, 185.0], [70.6, 188.0], [70.7, 188.0], [70.8, 188.0], [70.9, 188.0], [71.0, 189.0], [71.1, 189.0], [71.2, 189.0], [71.3, 190.0], [71.4, 190.0], [71.5, 190.0], [71.6, 190.0], [71.7, 191.0], [71.8, 191.0], [71.9, 191.0], [72.0, 191.0], [72.1, 191.0], [72.2, 191.0], [72.3, 191.0], [72.4, 191.0], [72.5, 191.0], [72.6, 191.0], [72.7, 191.0], [72.8, 191.0], [72.9, 191.0], [73.0, 191.0], [73.1, 192.0], [73.2, 192.0], [73.3, 192.0], [73.4, 193.0], [73.5, 193.0], [73.6, 193.0], [73.7, 193.0], [73.8, 193.0], [73.9, 193.0], [74.0, 193.0], [74.1, 193.0], [74.2, 193.0], [74.3, 193.0], [74.4, 193.0], [74.5, 193.0], [74.6, 193.0], [74.7, 193.0], [74.8, 194.0], [74.9, 194.0], [75.0, 194.0], [75.1, 196.0], [75.2, 196.0], [75.3, 196.0], [75.4, 196.0], [75.5, 198.0], [75.6, 198.0], [75.7, 198.0], [75.8, 199.0], [75.9, 199.0], [76.0, 199.0], [76.1, 199.0], [76.2, 199.0], [76.3, 199.0], [76.4, 199.0], [76.5, 203.0], [76.6, 203.0], [76.7, 203.0], [76.8, 203.0], [76.9, 204.0], [77.0, 204.0], [77.1, 204.0], [77.2, 204.0], [77.3, 204.0], [77.4, 204.0], [77.5, 204.0], [77.6, 205.0], [77.7, 205.0], [77.8, 205.0], [77.9, 206.0], [78.0, 206.0], [78.1, 206.0], [78.2, 206.0], [78.3, 207.0], [78.4, 207.0], [78.5, 207.0], [78.6, 210.0], [78.7, 210.0], [78.8, 210.0], [78.9, 213.0], [79.0, 213.0], [79.1, 213.0], [79.2, 213.0], [79.3, 214.0], [79.4, 214.0], [79.5, 214.0], [79.6, 216.0], [79.7, 216.0], [79.8, 216.0], [79.9, 216.0], [80.0, 217.0], [80.1, 217.0], [80.2, 217.0], [80.3, 220.0], [80.4, 220.0], [80.5, 220.0], [80.6, 220.0], [80.7, 220.0], [80.8, 220.0], [80.9, 220.0], [81.0, 234.0], [81.1, 234.0], [81.2, 234.0], [81.3, 234.0], [81.4, 239.0], [81.5, 239.0], [81.6, 239.0], [81.7, 240.0], [81.8, 240.0], [81.9, 240.0], [82.0, 240.0], [82.1, 250.0], [82.2, 250.0], [82.3, 250.0], [82.4, 251.0], [82.5, 251.0], [82.6, 251.0], [82.7, 261.0], [82.8, 261.0], [82.9, 261.0], [83.0, 261.0], [83.1, 265.0], [83.2, 265.0], [83.3, 265.0], [83.4, 269.0], [83.5, 269.0], [83.6, 269.0], [83.7, 269.0], [83.8, 272.0], [83.9, 272.0], [84.0, 272.0], [84.1, 272.0], [84.2, 272.0], [84.3, 272.0], [84.4, 272.0], [84.5, 274.0], [84.6, 274.0], [84.7, 274.0], [84.8, 275.0], [84.9, 275.0], [85.0, 275.0], [85.1, 275.0], [85.2, 275.0], [85.3, 275.0], [85.4, 275.0], [85.5, 276.0], [85.6, 276.0], [85.7, 276.0], [85.8, 276.0], [85.9, 276.0], [86.0, 276.0], [86.1, 276.0], [86.2, 277.0], [86.3, 277.0], [86.4, 277.0], [86.5, 277.0], [86.6, 279.0], [86.7, 279.0], [86.8, 279.0], [86.9, 280.0], [87.0, 280.0], [87.1, 280.0], [87.2, 280.0], [87.3, 280.0], [87.4, 280.0], [87.5, 280.0], [87.6, 282.0], [87.7, 282.0], [87.8, 282.0], [87.9, 282.0], [88.0, 282.0], [88.1, 282.0], [88.2, 282.0], [88.3, 283.0], [88.4, 283.0], [88.5, 283.0], [88.6, 283.0], [88.7, 283.0], [88.8, 283.0], [88.9, 283.0], [89.0, 283.0], [89.1, 283.0], [89.2, 283.0], [89.3, 285.0], [89.4, 285.0], [89.5, 285.0], [89.6, 285.0], [89.7, 286.0], [89.8, 286.0], [89.9, 286.0], [90.0, 287.0], [90.1, 287.0], [90.2, 287.0], [90.3, 287.0], [90.4, 287.0], [90.5, 287.0], [90.6, 287.0], [90.7, 288.0], [90.8, 288.0], [90.9, 288.0], [91.0, 288.0], [91.1, 288.0], [91.2, 288.0], [91.3, 288.0], [91.4, 289.0], [91.5, 289.0], [91.6, 289.0], [91.7, 290.0], [91.8, 290.0], [91.9, 290.0], [92.0, 290.0], [92.1, 291.0], [92.2, 291.0], [92.3, 291.0], [92.4, 292.0], [92.5, 292.0], [92.6, 292.0], [92.7, 292.0], [92.8, 292.0], [92.9, 292.0], [93.0, 292.0], [93.1, 292.0], [93.2, 292.0], [93.3, 292.0], [93.4, 292.0], [93.5, 293.0], [93.6, 293.0], [93.7, 293.0], [93.8, 299.0], [93.9, 299.0], [94.0, 299.0], [94.1, 299.0], [94.2, 301.0], [94.3, 301.0], [94.4, 301.0], [94.5, 360.0], [94.6, 360.0], [94.7, 360.0], [94.8, 360.0], [94.9, 381.0], [95.0, 381.0], [95.1, 381.0], [95.2, 381.0], [95.3, 381.0], [95.4, 381.0], [95.5, 381.0], [95.6, 382.0], [95.7, 382.0], [95.8, 382.0], [95.9, 382.0], [96.0, 382.0], [96.1, 382.0], [96.2, 398.0], [96.3, 398.0], [96.4, 398.0], [96.5, 398.0], [96.6, 398.0], [96.7, 398.0], [96.8, 398.0], [96.9, 404.0], [97.0, 404.0], [97.1, 404.0], [97.2, 404.0], [97.3, 424.0], [97.4, 424.0], [97.5, 424.0], [97.6, 461.0], [97.7, 461.0], [97.8, 461.0], [97.9, 461.0], [98.0, 483.0], [98.1, 483.0], [98.2, 483.0], [98.3, 484.0], [98.4, 484.0], [98.5, 484.0], [98.6, 484.0], [98.7, 493.0], [98.8, 493.0], [98.9, 493.0], [99.0, 632.0], [99.1, 632.0], [99.2, 632.0], [99.3, 632.0], [99.4, 1276.0], [99.5, 1276.0], [99.6, 1276.0], [99.7, 1532.0], [99.8, 1532.0], [99.9, 1532.0]], "isOverall": false, "label": "autorizacion", "isController": false}, {"data": [[0.0, 466.0], [0.1, 466.0], [0.2, 466.0], [0.3, 466.0], [0.4, 468.0], [0.5, 468.0], [0.6, 468.0], [0.7, 473.0], [0.8, 473.0], [0.9, 473.0], [1.0, 473.0], [1.1, 473.0], [1.2, 473.0], [1.3, 473.0], [1.4, 475.0], [1.5, 475.0], [1.6, 475.0], [1.7, 475.0], [1.8, 478.0], [1.9, 478.0], [2.0, 478.0], [2.1, 479.0], [2.2, 479.0], [2.3, 479.0], [2.4, 479.0], [2.5, 481.0], [2.6, 481.0], [2.7, 481.0], [2.8, 482.0], [2.9, 482.0], [3.0, 482.0], [3.1, 484.0], [3.2, 484.0], [3.3, 484.0], [3.4, 484.0], [3.5, 484.0], [3.6, 484.0], [3.7, 484.0], [3.8, 484.0], [3.9, 484.0], [4.0, 484.0], [4.1, 484.0], [4.2, 484.0], [4.3, 484.0], [4.4, 484.0], [4.5, 486.0], [4.6, 486.0], [4.7, 486.0], [4.8, 486.0], [4.9, 490.0], [5.0, 490.0], [5.1, 490.0], [5.2, 490.0], [5.3, 490.0], [5.4, 490.0], [5.5, 490.0], [5.6, 490.0], [5.7, 490.0], [5.8, 490.0], [5.9, 490.0], [6.0, 490.0], [6.1, 490.0], [6.2, 492.0], [6.3, 492.0], [6.4, 492.0], [6.5, 492.0], [6.6, 493.0], [6.7, 493.0], [6.8, 493.0], [6.9, 494.0], [7.0, 494.0], [7.1, 494.0], [7.2, 494.0], [7.3, 494.0], [7.4, 494.0], [7.5, 494.0], [7.6, 494.0], [7.7, 494.0], [7.8, 494.0], [7.9, 494.0], [8.0, 495.0], [8.1, 495.0], [8.2, 495.0], [8.3, 496.0], [8.4, 496.0], [8.5, 496.0], [8.6, 497.0], [8.7, 497.0], [8.8, 497.0], [8.9, 497.0], [9.0, 498.0], [9.1, 498.0], [9.2, 498.0], [9.3, 498.0], [9.4, 498.0], [9.5, 498.0], [9.6, 498.0], [9.7, 498.0], [9.8, 498.0], [9.9, 498.0], [10.0, 498.0], [10.1, 498.0], [10.2, 498.0], [10.3, 498.0], [10.4, 499.0], [10.5, 499.0], [10.6, 499.0], [10.7, 499.0], [10.8, 499.0], [10.9, 499.0], [11.0, 501.0], [11.1, 501.0], [11.2, 501.0], [11.3, 501.0], [11.4, 503.0], [11.5, 503.0], [11.6, 503.0], [11.7, 507.0], [11.8, 507.0], [11.9, 507.0], [12.0, 507.0], [12.1, 508.0], [12.2, 508.0], [12.3, 508.0], [12.4, 509.0], [12.5, 509.0], [12.6, 509.0], [12.7, 509.0], [12.8, 509.0], [12.9, 509.0], [13.0, 509.0], [13.1, 510.0], [13.2, 510.0], [13.3, 510.0], [13.4, 510.0], [13.5, 510.0], [13.6, 510.0], [13.7, 510.0], [13.8, 510.0], [13.9, 510.0], [14.0, 510.0], [14.1, 511.0], [14.2, 511.0], [14.3, 511.0], [14.4, 511.0], [14.5, 511.0], [14.6, 511.0], [14.7, 511.0], [14.8, 512.0], [14.9, 512.0], [15.0, 512.0], [15.1, 512.0], [15.2, 512.0], [15.3, 512.0], [15.4, 512.0], [15.5, 512.0], [15.6, 512.0], [15.7, 512.0], [15.8, 512.0], [15.9, 513.0], [16.0, 513.0], [16.1, 513.0], [16.2, 513.0], [16.3, 513.0], [16.4, 513.0], [16.5, 513.0], [16.6, 513.0], [16.7, 513.0], [16.8, 513.0], [16.9, 515.0], [17.0, 515.0], [17.1, 515.0], [17.2, 515.0], [17.3, 515.0], [17.4, 515.0], [17.5, 515.0], [17.6, 517.0], [17.7, 517.0], [17.8, 517.0], [17.9, 519.0], [18.0, 519.0], [18.1, 519.0], [18.2, 519.0], [18.3, 519.0], [18.4, 519.0], [18.5, 519.0], [18.6, 519.0], [18.7, 519.0], [18.8, 519.0], [18.9, 519.0], [19.0, 520.0], [19.1, 520.0], [19.2, 520.0], [19.3, 521.0], [19.4, 521.0], [19.5, 521.0], [19.6, 521.0], [19.7, 521.0], [19.8, 521.0], [19.9, 521.0], [20.0, 522.0], [20.1, 522.0], [20.2, 522.0], [20.3, 523.0], [20.4, 523.0], [20.5, 523.0], [20.6, 523.0], [20.7, 528.0], [20.8, 528.0], [20.9, 528.0], [21.0, 528.0], [21.1, 528.0], [21.2, 528.0], [21.3, 528.0], [21.4, 529.0], [21.5, 529.0], [21.6, 529.0], [21.7, 529.0], [21.8, 529.0], [21.9, 529.0], [22.0, 530.0], [22.1, 530.0], [22.2, 530.0], [22.3, 530.0], [22.4, 530.0], [22.5, 530.0], [22.6, 530.0], [22.7, 531.0], [22.8, 531.0], [22.9, 531.0], [23.0, 531.0], [23.1, 531.0], [23.2, 531.0], [23.3, 531.0], [23.4, 532.0], [23.5, 532.0], [23.6, 532.0], [23.7, 532.0], [23.8, 533.0], [23.9, 533.0], [24.0, 533.0], [24.1, 533.0], [24.2, 533.0], [24.3, 533.0], [24.4, 533.0], [24.5, 533.0], [24.6, 533.0], [24.7, 533.0], [24.8, 533.0], [24.9, 533.0], [25.0, 533.0], [25.1, 534.0], [25.2, 534.0], [25.3, 534.0], [25.4, 534.0], [25.5, 534.0], [25.6, 534.0], [25.7, 534.0], [25.8, 537.0], [25.9, 537.0], [26.0, 537.0], [26.1, 537.0], [26.2, 537.0], [26.3, 537.0], [26.4, 537.0], [26.5, 538.0], [26.6, 538.0], [26.7, 538.0], [26.8, 538.0], [26.9, 541.0], [27.0, 541.0], [27.1, 541.0], [27.2, 541.0], [27.3, 541.0], [27.4, 541.0], [27.5, 541.0], [27.6, 541.0], [27.7, 541.0], [27.8, 541.0], [27.9, 542.0], [28.0, 542.0], [28.1, 542.0], [28.2, 542.0], [28.3, 542.0], [28.4, 542.0], [28.5, 542.0], [28.6, 542.0], [28.7, 542.0], [28.8, 542.0], [28.9, 542.0], [29.0, 542.0], [29.1, 542.0], [29.2, 542.0], [29.3, 542.0], [29.4, 542.0], [29.5, 542.0], [29.6, 543.0], [29.7, 543.0], [29.8, 543.0], [29.9, 543.0], [30.0, 543.0], [30.1, 543.0], [30.2, 543.0], [30.3, 544.0], [30.4, 544.0], [30.5, 544.0], [30.6, 544.0], [30.7, 544.0], [30.8, 544.0], [30.9, 544.0], [31.0, 544.0], [31.1, 544.0], [31.2, 544.0], [31.3, 545.0], [31.4, 545.0], [31.5, 545.0], [31.6, 545.0], [31.7, 545.0], [31.8, 545.0], [31.9, 545.0], [32.0, 546.0], [32.1, 546.0], [32.2, 546.0], [32.3, 546.0], [32.4, 547.0], [32.5, 547.0], [32.6, 547.0], [32.7, 548.0], [32.8, 548.0], [32.9, 548.0], [33.0, 549.0], [33.1, 549.0], [33.2, 549.0], [33.3, 549.0], [33.4, 550.0], [33.5, 550.0], [33.6, 550.0], [33.7, 550.0], [33.8, 550.0], [33.9, 550.0], [34.0, 550.0], [34.1, 551.0], [34.2, 551.0], [34.3, 551.0], [34.4, 551.0], [34.5, 551.0], [34.6, 551.0], [34.7, 551.0], [34.8, 551.0], [34.9, 551.0], [35.0, 551.0], [35.1, 551.0], [35.2, 551.0], [35.3, 551.0], [35.4, 552.0], [35.5, 552.0], [35.6, 552.0], [35.7, 552.0], [35.8, 553.0], [35.9, 553.0], [36.0, 553.0], [36.1, 556.0], [36.2, 556.0], [36.3, 556.0], [36.4, 556.0], [36.5, 556.0], [36.6, 556.0], [36.7, 556.0], [36.8, 556.0], [36.9, 556.0], [37.0, 556.0], [37.1, 556.0], [37.2, 556.0], [37.3, 556.0], [37.4, 556.0], [37.5, 557.0], [37.6, 557.0], [37.7, 557.0], [37.8, 557.0], [37.9, 557.0], [38.0, 557.0], [38.1, 557.0], [38.2, 559.0], [38.3, 559.0], [38.4, 559.0], [38.5, 559.0], [38.6, 559.0], [38.7, 559.0], [38.8, 559.0], [38.9, 559.0], [39.0, 559.0], [39.1, 559.0], [39.2, 560.0], [39.3, 560.0], [39.4, 560.0], [39.5, 560.0], [39.6, 561.0], [39.7, 561.0], [39.8, 561.0], [39.9, 562.0], [40.0, 562.0], [40.1, 562.0], [40.2, 562.0], [40.3, 562.0], [40.4, 562.0], [40.5, 562.0], [40.6, 564.0], [40.7, 564.0], [40.8, 564.0], [40.9, 571.0], [41.0, 571.0], [41.1, 571.0], [41.2, 571.0], [41.3, 571.0], [41.4, 571.0], [41.5, 571.0], [41.6, 574.0], [41.7, 574.0], [41.8, 574.0], [41.9, 574.0], [42.0, 577.0], [42.1, 577.0], [42.2, 577.0], [42.3, 578.0], [42.4, 578.0], [42.5, 578.0], [42.6, 578.0], [42.7, 578.0], [42.8, 578.0], [42.9, 578.0], [43.0, 578.0], [43.1, 578.0], [43.2, 578.0], [43.3, 580.0], [43.4, 580.0], [43.5, 580.0], [43.6, 580.0], [43.7, 583.0], [43.8, 583.0], [43.9, 583.0], [44.0, 584.0], [44.1, 584.0], [44.2, 584.0], [44.3, 584.0], [44.4, 585.0], [44.5, 585.0], [44.6, 585.0], [44.7, 586.0], [44.8, 586.0], [44.9, 586.0], [45.0, 586.0], [45.1, 586.0], [45.2, 586.0], [45.3, 586.0], [45.4, 588.0], [45.5, 588.0], [45.6, 588.0], [45.7, 588.0], [45.8, 588.0], [45.9, 588.0], [46.0, 588.0], [46.1, 588.0], [46.2, 588.0], [46.3, 588.0], [46.4, 590.0], [46.5, 590.0], [46.6, 590.0], [46.7, 590.0], [46.8, 590.0], [46.9, 590.0], [47.0, 590.0], [47.1, 590.0], [47.2, 590.0], [47.3, 590.0], [47.4, 590.0], [47.5, 590.0], [47.6, 590.0], [47.7, 590.0], [47.8, 590.0], [47.9, 590.0], [48.0, 590.0], [48.1, 590.0], [48.2, 592.0], [48.3, 592.0], [48.4, 592.0], [48.5, 594.0], [48.6, 594.0], [48.7, 594.0], [48.8, 594.0], [48.9, 594.0], [49.0, 594.0], [49.1, 594.0], [49.2, 594.0], [49.3, 594.0], [49.4, 594.0], [49.5, 594.0], [49.6, 594.0], [49.7, 594.0], [49.8, 594.0], [49.9, 595.0], [50.0, 595.0], [50.1, 595.0], [50.2, 596.0], [50.3, 596.0], [50.4, 596.0], [50.5, 596.0], [50.6, 596.0], [50.7, 596.0], [50.8, 596.0], [50.9, 596.0], [51.0, 596.0], [51.1, 596.0], [51.2, 596.0], [51.3, 597.0], [51.4, 597.0], [51.5, 597.0], [51.6, 598.0], [51.7, 598.0], [51.8, 598.0], [51.9, 598.0], [52.0, 598.0], [52.1, 598.0], [52.2, 598.0], [52.3, 599.0], [52.4, 599.0], [52.5, 599.0], [52.6, 599.0], [52.7, 599.0], [52.8, 599.0], [52.9, 599.0], [53.0, 600.0], [53.1, 600.0], [53.2, 600.0], [53.3, 601.0], [53.4, 601.0], [53.5, 601.0], [53.6, 601.0], [53.7, 602.0], [53.8, 602.0], [53.9, 602.0], [54.0, 602.0], [54.1, 602.0], [54.2, 602.0], [54.3, 602.0], [54.4, 602.0], [54.5, 602.0], [54.6, 602.0], [54.7, 603.0], [54.8, 603.0], [54.9, 603.0], [55.0, 603.0], [55.1, 603.0], [55.2, 603.0], [55.3, 603.0], [55.4, 604.0], [55.5, 604.0], [55.6, 604.0], [55.7, 604.0], [55.8, 604.0], [55.9, 604.0], [56.0, 604.0], [56.1, 604.0], [56.2, 604.0], [56.3, 604.0], [56.4, 606.0], [56.5, 606.0], [56.6, 606.0], [56.7, 606.0], [56.8, 606.0], [56.9, 606.0], [57.0, 606.0], [57.1, 607.0], [57.2, 607.0], [57.3, 607.0], [57.4, 607.0], [57.5, 607.0], [57.6, 607.0], [57.7, 607.0], [57.8, 607.0], [57.9, 607.0], [58.0, 607.0], [58.1, 608.0], [58.2, 608.0], [58.3, 608.0], [58.4, 608.0], [58.5, 608.0], [58.6, 608.0], [58.7, 608.0], [58.8, 608.0], [58.9, 608.0], [59.0, 608.0], [59.1, 608.0], [59.2, 610.0], [59.3, 610.0], [59.4, 610.0], [59.5, 613.0], [59.6, 613.0], [59.7, 613.0], [59.8, 615.0], [59.9, 615.0], [60.0, 615.0], [60.1, 615.0], [60.2, 620.0], [60.3, 620.0], [60.4, 620.0], [60.5, 621.0], [60.6, 621.0], [60.7, 621.0], [60.8, 621.0], [60.9, 629.0], [61.0, 629.0], [61.1, 629.0], [61.2, 635.0], [61.3, 635.0], [61.4, 635.0], [61.5, 635.0], [61.6, 635.0], [61.7, 635.0], [61.8, 635.0], [61.9, 643.0], [62.0, 643.0], [62.1, 643.0], [62.2, 645.0], [62.3, 645.0], [62.4, 645.0], [62.5, 645.0], [62.6, 645.0], [62.7, 645.0], [62.8, 645.0], [62.9, 647.0], [63.0, 647.0], [63.1, 647.0], [63.2, 647.0], [63.3, 648.0], [63.4, 648.0], [63.5, 648.0], [63.6, 650.0], [63.7, 650.0], [63.8, 650.0], [63.9, 650.0], [64.0, 653.0], [64.1, 653.0], [64.2, 653.0], [64.3, 657.0], [64.4, 657.0], [64.5, 657.0], [64.6, 657.0], [64.7, 658.0], [64.8, 658.0], [64.9, 658.0], [65.0, 660.0], [65.1, 660.0], [65.2, 660.0], [65.3, 660.0], [65.4, 660.0], [65.5, 660.0], [65.6, 660.0], [65.7, 661.0], [65.8, 661.0], [65.9, 661.0], [66.0, 663.0], [66.1, 663.0], [66.2, 663.0], [66.3, 663.0], [66.4, 665.0], [66.5, 665.0], [66.6, 665.0], [66.7, 667.0], [66.8, 667.0], [66.9, 667.0], [67.0, 667.0], [67.1, 669.0], [67.2, 669.0], [67.3, 669.0], [67.4, 671.0], [67.5, 671.0], [67.6, 671.0], [67.7, 672.0], [67.8, 672.0], [67.9, 672.0], [68.0, 672.0], [68.1, 675.0], [68.2, 675.0], [68.3, 675.0], [68.4, 677.0], [68.5, 677.0], [68.6, 677.0], [68.7, 677.0], [68.8, 682.0], [68.9, 682.0], [69.0, 682.0], [69.1, 682.0], [69.2, 682.0], [69.3, 682.0], [69.4, 682.0], [69.5, 683.0], [69.6, 683.0], [69.7, 683.0], [69.8, 683.0], [69.9, 683.0], [70.0, 683.0], [70.1, 683.0], [70.2, 683.0], [70.3, 683.0], [70.4, 683.0], [70.5, 684.0], [70.6, 684.0], [70.7, 684.0], [70.8, 684.0], [70.9, 684.0], [71.0, 684.0], [71.1, 684.0], [71.2, 684.0], [71.3, 684.0], [71.4, 684.0], [71.5, 684.0], [71.6, 684.0], [71.7, 684.0], [71.8, 684.0], [71.9, 684.0], [72.0, 684.0], [72.1, 684.0], [72.2, 685.0], [72.3, 685.0], [72.4, 685.0], [72.5, 685.0], [72.6, 686.0], [72.7, 686.0], [72.8, 686.0], [72.9, 688.0], [73.0, 688.0], [73.1, 688.0], [73.2, 688.0], [73.3, 688.0], [73.4, 688.0], [73.5, 688.0], [73.6, 688.0], [73.7, 688.0], [73.8, 688.0], [73.9, 690.0], [74.0, 690.0], [74.1, 690.0], [74.2, 690.0], [74.3, 690.0], [74.4, 690.0], [74.5, 690.0], [74.6, 690.0], [74.7, 690.0], [74.8, 690.0], [74.9, 690.0], [75.0, 690.0], [75.1, 690.0], [75.2, 690.0], [75.3, 690.0], [75.4, 690.0], [75.5, 690.0], [75.6, 690.0], [75.7, 693.0], [75.8, 693.0], [75.9, 693.0], [76.0, 693.0], [76.1, 693.0], [76.2, 693.0], [76.3, 693.0], [76.4, 693.0], [76.5, 693.0], [76.6, 693.0], [76.7, 694.0], [76.8, 694.0], [76.9, 694.0], [77.0, 695.0], [77.1, 695.0], [77.2, 695.0], [77.3, 695.0], [77.4, 698.0], [77.5, 698.0], [77.6, 698.0], [77.7, 699.0], [77.8, 699.0], [77.9, 699.0], [78.0, 699.0], [78.1, 700.0], [78.2, 700.0], [78.3, 700.0], [78.4, 702.0], [78.5, 702.0], [78.6, 702.0], [78.7, 702.0], [78.8, 702.0], [78.9, 702.0], [79.0, 702.0], [79.1, 703.0], [79.2, 703.0], [79.3, 703.0], [79.4, 704.0], [79.5, 704.0], [79.6, 704.0], [79.7, 704.0], [79.8, 708.0], [79.9, 708.0], [80.0, 708.0], [80.1, 710.0], [80.2, 710.0], [80.3, 710.0], [80.4, 710.0], [80.5, 716.0], [80.6, 716.0], [80.7, 716.0], [80.8, 716.0], [80.9, 716.0], [81.0, 716.0], [81.1, 724.0], [81.2, 724.0], [81.3, 724.0], [81.4, 724.0], [81.5, 746.0], [81.6, 746.0], [81.7, 746.0], [81.8, 747.0], [81.9, 747.0], [82.0, 747.0], [82.1, 747.0], [82.2, 749.0], [82.3, 749.0], [82.4, 749.0], [82.5, 761.0], [82.6, 761.0], [82.7, 761.0], [82.8, 761.0], [82.9, 769.0], [83.0, 769.0], [83.1, 769.0], [83.2, 771.0], [83.3, 771.0], [83.4, 771.0], [83.5, 771.0], [83.6, 774.0], [83.7, 774.0], [83.8, 774.0], [83.9, 781.0], [84.0, 781.0], [84.1, 781.0], [84.2, 781.0], [84.3, 781.0], [84.4, 781.0], [84.5, 781.0], [84.6, 782.0], [84.7, 782.0], [84.8, 782.0], [84.9, 782.0], [85.0, 782.0], [85.1, 782.0], [85.2, 782.0], [85.3, 783.0], [85.4, 783.0], [85.5, 783.0], [85.6, 788.0], [85.7, 788.0], [85.8, 788.0], [85.9, 788.0], [86.0, 788.0], [86.1, 788.0], [86.2, 788.0], [86.3, 793.0], [86.4, 793.0], [86.5, 793.0], [86.6, 794.0], [86.7, 794.0], [86.8, 794.0], [86.9, 794.0], [87.0, 796.0], [87.1, 796.0], [87.2, 796.0], [87.3, 796.0], [87.4, 796.0], [87.5, 796.0], [87.6, 796.0], [87.7, 800.0], [87.8, 800.0], [87.9, 800.0], [88.0, 812.0], [88.1, 812.0], [88.2, 812.0], [88.3, 812.0], [88.4, 832.0], [88.5, 832.0], [88.6, 832.0], [88.7, 842.0], [88.8, 842.0], [88.9, 842.0], [89.0, 842.0], [89.1, 846.0], [89.2, 846.0], [89.3, 846.0], [89.4, 860.0], [89.5, 860.0], [89.6, 860.0], [89.7, 868.0], [89.8, 868.0], [89.9, 868.0], [90.0, 868.0], [90.1, 869.0], [90.2, 869.0], [90.3, 869.0], [90.4, 877.0], [90.5, 877.0], [90.6, 877.0], [90.7, 877.0], [90.8, 885.0], [90.9, 885.0], [91.0, 885.0], [91.1, 893.0], [91.2, 893.0], [91.3, 893.0], [91.4, 893.0], [91.5, 902.0], [91.6, 902.0], [91.7, 902.0], [91.8, 908.0], [91.9, 908.0], [92.0, 908.0], [92.1, 908.0], [92.2, 908.0], [92.3, 908.0], [92.4, 908.0], [92.5, 920.0], [92.6, 920.0], [92.7, 920.0], [92.8, 923.0], [92.9, 923.0], [93.0, 923.0], [93.1, 923.0], [93.2, 937.0], [93.3, 937.0], [93.4, 937.0], [93.5, 948.0], [93.6, 948.0], [93.7, 948.0], [93.8, 948.0], [93.9, 993.0], [94.0, 993.0], [94.1, 993.0], [94.2, 993.0], [94.3, 993.0], [94.4, 993.0], [94.5, 993.0], [94.6, 1005.0], [94.7, 1005.0], [94.8, 1005.0], [94.9, 1006.0], [95.0, 1006.0], [95.1, 1006.0], [95.2, 1032.0], [95.3, 1032.0], [95.4, 1032.0], [95.5, 1032.0], [95.6, 1070.0], [95.7, 1070.0], [95.8, 1070.0], [95.9, 1084.0], [96.0, 1084.0], [96.1, 1084.0], [96.2, 1084.0], [96.3, 1089.0], [96.4, 1089.0], [96.5, 1089.0], [96.6, 1101.0], [96.7, 1101.0], [96.8, 1101.0], [96.9, 1101.0], [97.0, 1129.0], [97.1, 1129.0], [97.2, 1129.0], [97.3, 1177.0], [97.4, 1177.0], [97.5, 1177.0], [97.6, 1287.0], [97.7, 1287.0], [97.8, 1287.0], [97.9, 1287.0], [98.0, 2177.0], [98.1, 2177.0], [98.2, 2177.0], [98.3, 2522.0], [98.4, 2522.0], [98.5, 2522.0], [98.6, 2522.0], [98.7, 2555.0], [98.8, 2555.0], [98.9, 2555.0], [99.0, 2705.0], [99.1, 2705.0], [99.2, 2705.0], [99.3, 2705.0], [99.4, 3120.0], [99.5, 3120.0], [99.6, 3120.0], [99.7, 3166.0], [99.8, 3166.0], [99.9, 3166.0]], "isOverall": false, "label": "preAutorizacion", "isController": false}, {"data": [[0.0, 2264.0], [0.1, 2264.0], [0.2, 2264.0], [0.3, 2264.0], [0.4, 2264.0], [0.5, 2264.0], [0.6, 2264.0], [0.7, 2264.0], [0.8, 2264.0], [0.9, 2264.0], [1.0, 2264.0], [1.1, 2264.0], [1.2, 2264.0], [1.3, 2264.0], [1.4, 2264.0], [1.5, 2264.0], [1.6, 2264.0], [1.7, 2264.0], [1.8, 2264.0], [1.9, 2264.0], [2.0, 2264.0], [2.1, 2264.0], [2.2, 2264.0], [2.3, 2264.0], [2.4, 2264.0], [2.5, 2264.0], [2.6, 2264.0], [2.7, 2264.0], [2.8, 2264.0], [2.9, 2264.0], [3.0, 2264.0], [3.1, 2264.0], [3.2, 2264.0], [3.3, 2264.0], [3.4, 2264.0], [3.5, 2264.0], [3.6, 2264.0], [3.7, 2264.0], [3.8, 2264.0], [3.9, 2264.0], [4.0, 2264.0], [4.1, 2264.0], [4.2, 2264.0], [4.3, 2264.0], [4.4, 2264.0], [4.5, 2264.0], [4.6, 2264.0], [4.7, 2264.0], [4.8, 2264.0], [4.9, 2264.0], [5.0, 2264.0], [5.1, 2264.0], [5.2, 2264.0], [5.3, 2264.0], [5.4, 2264.0], [5.5, 2264.0], [5.6, 2264.0], [5.7, 2264.0], [5.8, 2264.0], [5.9, 2264.0], [6.0, 2264.0], [6.1, 2264.0], [6.2, 2264.0], [6.3, 2264.0], [6.4, 2264.0], [6.5, 2264.0], [6.6, 2264.0], [6.7, 2264.0], [6.8, 2264.0], [6.9, 2264.0], [7.0, 2264.0], [7.1, 2264.0], [7.2, 2264.0], [7.3, 2264.0], [7.4, 2264.0], [7.5, 2264.0], [7.6, 2264.0], [7.7, 2264.0], [7.8, 2264.0], [7.9, 2264.0], [8.0, 2264.0], [8.1, 2264.0], [8.2, 2264.0], [8.3, 2264.0], [8.4, 2264.0], [8.5, 2264.0], [8.6, 2264.0], [8.7, 2264.0], [8.8, 2264.0], [8.9, 2264.0], [9.0, 2264.0], [9.1, 2264.0], [9.2, 2264.0], [9.3, 2264.0], [9.4, 2264.0], [9.5, 2264.0], [9.6, 2264.0], [9.7, 2264.0], [9.8, 2264.0], [9.9, 2264.0], [10.0, 2264.0], [10.1, 2264.0], [10.2, 2264.0], [10.3, 2264.0], [10.4, 2264.0], [10.5, 2264.0], [10.6, 2264.0], [10.7, 2264.0], [10.8, 2264.0], [10.9, 2264.0], [11.0, 2264.0], [11.1, 2264.0], [11.2, 2264.0], [11.3, 2264.0], [11.4, 2264.0], [11.5, 2264.0], [11.6, 2264.0], [11.7, 2264.0], [11.8, 2264.0], [11.9, 2264.0], [12.0, 2264.0], [12.1, 2264.0], [12.2, 2264.0], [12.3, 2264.0], [12.4, 2264.0], [12.5, 2264.0], [12.6, 2264.0], [12.7, 2264.0], [12.8, 2264.0], [12.9, 2264.0], [13.0, 2264.0], [13.1, 2264.0], [13.2, 2264.0], [13.3, 2264.0], [13.4, 2264.0], [13.5, 2264.0], [13.6, 2264.0], [13.7, 2264.0], [13.8, 2264.0], [13.9, 2264.0], [14.0, 2264.0], [14.1, 2264.0], [14.2, 2264.0], [14.3, 2264.0], [14.4, 2264.0], [14.5, 2264.0], [14.6, 2264.0], [14.7, 2264.0], [14.8, 2264.0], [14.9, 2264.0], [15.0, 2264.0], [15.1, 2264.0], [15.2, 2264.0], [15.3, 2264.0], [15.4, 2264.0], [15.5, 2264.0], [15.6, 2264.0], [15.7, 2264.0], [15.8, 2264.0], [15.9, 2264.0], [16.0, 2264.0], [16.1, 2264.0], [16.2, 2264.0], [16.3, 2264.0], [16.4, 2264.0], [16.5, 2264.0], [16.6, 2264.0], [16.7, 2264.0], [16.8, 2264.0], [16.9, 2264.0], [17.0, 2264.0], [17.1, 2264.0], [17.2, 2264.0], [17.3, 2264.0], [17.4, 2264.0], [17.5, 2264.0], [17.6, 2264.0], [17.7, 2264.0], [17.8, 2264.0], [17.9, 2264.0], [18.0, 2264.0], [18.1, 2264.0], [18.2, 2264.0], [18.3, 2264.0], [18.4, 2264.0], [18.5, 2264.0], [18.6, 2264.0], [18.7, 2264.0], [18.8, 2264.0], [18.9, 2264.0], [19.0, 2264.0], [19.1, 2264.0], [19.2, 2264.0], [19.3, 2264.0], [19.4, 2264.0], [19.5, 2264.0], [19.6, 2264.0], [19.7, 2264.0], [19.8, 2264.0], [19.9, 2264.0], [20.0, 2264.0], [20.1, 2264.0], [20.2, 2264.0], [20.3, 2264.0], [20.4, 2264.0], [20.5, 2264.0], [20.6, 2264.0], [20.7, 2264.0], [20.8, 2264.0], [20.9, 2264.0], [21.0, 2264.0], [21.1, 2264.0], [21.2, 2264.0], [21.3, 2264.0], [21.4, 2264.0], [21.5, 2264.0], [21.6, 2264.0], [21.7, 2264.0], [21.8, 2264.0], [21.9, 2264.0], [22.0, 2264.0], [22.1, 2264.0], [22.2, 2264.0], [22.3, 2264.0], [22.4, 2264.0], [22.5, 2264.0], [22.6, 2264.0], [22.7, 2264.0], [22.8, 2264.0], [22.9, 2264.0], [23.0, 2264.0], [23.1, 2264.0], [23.2, 2264.0], [23.3, 2264.0], [23.4, 2264.0], [23.5, 2264.0], [23.6, 2264.0], [23.7, 2264.0], [23.8, 2264.0], [23.9, 2264.0], [24.0, 2264.0], [24.1, 2264.0], [24.2, 2264.0], [24.3, 2264.0], [24.4, 2264.0], [24.5, 2264.0], [24.6, 2264.0], [24.7, 2264.0], [24.8, 2264.0], [24.9, 2264.0], [25.0, 2264.0], [25.1, 2264.0], [25.2, 2264.0], [25.3, 2264.0], [25.4, 2264.0], [25.5, 2264.0], [25.6, 2264.0], [25.7, 2264.0], [25.8, 2264.0], [25.9, 2264.0], [26.0, 2264.0], [26.1, 2264.0], [26.2, 2264.0], [26.3, 2264.0], [26.4, 2264.0], [26.5, 2264.0], [26.6, 2264.0], [26.7, 2264.0], [26.8, 2264.0], [26.9, 2264.0], [27.0, 2264.0], [27.1, 2264.0], [27.2, 2264.0], [27.3, 2264.0], [27.4, 2264.0], [27.5, 2264.0], [27.6, 2264.0], [27.7, 2264.0], [27.8, 2264.0], [27.9, 2264.0], [28.0, 2264.0], [28.1, 2264.0], [28.2, 2264.0], [28.3, 2264.0], [28.4, 2264.0], [28.5, 2264.0], [28.6, 2264.0], [28.7, 2264.0], [28.8, 2264.0], [28.9, 2264.0], [29.0, 2264.0], [29.1, 2264.0], [29.2, 2264.0], [29.3, 2264.0], [29.4, 2264.0], [29.5, 2264.0], [29.6, 2264.0], [29.7, 2264.0], [29.8, 2264.0], [29.9, 2264.0], [30.0, 2264.0], [30.1, 2264.0], [30.2, 2264.0], [30.3, 2264.0], [30.4, 2264.0], [30.5, 2264.0], [30.6, 2264.0], [30.7, 2264.0], [30.8, 2264.0], [30.9, 2264.0], [31.0, 2264.0], [31.1, 2264.0], [31.2, 2264.0], [31.3, 2264.0], [31.4, 2264.0], [31.5, 2264.0], [31.6, 2264.0], [31.7, 2264.0], [31.8, 2264.0], [31.9, 2264.0], [32.0, 2264.0], [32.1, 2264.0], [32.2, 2264.0], [32.3, 2264.0], [32.4, 2264.0], [32.5, 2264.0], [32.6, 2264.0], [32.7, 2264.0], [32.8, 2264.0], [32.9, 2264.0], [33.0, 2264.0], [33.1, 2264.0], [33.2, 2264.0], [33.3, 2264.0], [33.4, 2264.0], [33.5, 2264.0], [33.6, 2264.0], [33.7, 2264.0], [33.8, 2264.0], [33.9, 2264.0], [34.0, 2264.0], [34.1, 2264.0], [34.2, 2264.0], [34.3, 2264.0], [34.4, 2264.0], [34.5, 2264.0], [34.6, 2264.0], [34.7, 2264.0], [34.8, 2264.0], [34.9, 2264.0], [35.0, 2264.0], [35.1, 2264.0], [35.2, 2264.0], [35.3, 2264.0], [35.4, 2264.0], [35.5, 2264.0], [35.6, 2264.0], [35.7, 2264.0], [35.8, 2264.0], [35.9, 2264.0], [36.0, 2264.0], [36.1, 2264.0], [36.2, 2264.0], [36.3, 2264.0], [36.4, 2264.0], [36.5, 2264.0], [36.6, 2264.0], [36.7, 2264.0], [36.8, 2264.0], [36.9, 2264.0], [37.0, 2264.0], [37.1, 2264.0], [37.2, 2264.0], [37.3, 2264.0], [37.4, 2264.0], [37.5, 2264.0], [37.6, 2264.0], [37.7, 2264.0], [37.8, 2264.0], [37.9, 2264.0], [38.0, 2264.0], [38.1, 2264.0], [38.2, 2264.0], [38.3, 2264.0], [38.4, 2264.0], [38.5, 2264.0], [38.6, 2264.0], [38.7, 2264.0], [38.8, 2264.0], [38.9, 2264.0], [39.0, 2264.0], [39.1, 2264.0], [39.2, 2264.0], [39.3, 2264.0], [39.4, 2264.0], [39.5, 2264.0], [39.6, 2264.0], [39.7, 2264.0], [39.8, 2264.0], [39.9, 2264.0], [40.0, 2264.0], [40.1, 2264.0], [40.2, 2264.0], [40.3, 2264.0], [40.4, 2264.0], [40.5, 2264.0], [40.6, 2264.0], [40.7, 2264.0], [40.8, 2264.0], [40.9, 2264.0], [41.0, 2264.0], [41.1, 2264.0], [41.2, 2264.0], [41.3, 2264.0], [41.4, 2264.0], [41.5, 2264.0], [41.6, 2264.0], [41.7, 2264.0], [41.8, 2264.0], [41.9, 2264.0], [42.0, 2264.0], [42.1, 2264.0], [42.2, 2264.0], [42.3, 2264.0], [42.4, 2264.0], [42.5, 2264.0], [42.6, 2264.0], [42.7, 2264.0], [42.8, 2264.0], [42.9, 2264.0], [43.0, 2264.0], [43.1, 2264.0], [43.2, 2264.0], [43.3, 2264.0], [43.4, 2264.0], [43.5, 2264.0], [43.6, 2264.0], [43.7, 2264.0], [43.8, 2264.0], [43.9, 2264.0], [44.0, 2264.0], [44.1, 2264.0], [44.2, 2264.0], [44.3, 2264.0], [44.4, 2264.0], [44.5, 2264.0], [44.6, 2264.0], [44.7, 2264.0], [44.8, 2264.0], [44.9, 2264.0], [45.0, 2264.0], [45.1, 2264.0], [45.2, 2264.0], [45.3, 2264.0], [45.4, 2264.0], [45.5, 2264.0], [45.6, 2264.0], [45.7, 2264.0], [45.8, 2264.0], [45.9, 2264.0], [46.0, 2264.0], [46.1, 2264.0], [46.2, 2264.0], [46.3, 2264.0], [46.4, 2264.0], [46.5, 2264.0], [46.6, 2264.0], [46.7, 2264.0], [46.8, 2264.0], [46.9, 2264.0], [47.0, 2264.0], [47.1, 2264.0], [47.2, 2264.0], [47.3, 2264.0], [47.4, 2264.0], [47.5, 2264.0], [47.6, 2264.0], [47.7, 2264.0], [47.8, 2264.0], [47.9, 2264.0], [48.0, 2264.0], [48.1, 2264.0], [48.2, 2264.0], [48.3, 2264.0], [48.4, 2264.0], [48.5, 2264.0], [48.6, 2264.0], [48.7, 2264.0], [48.8, 2264.0], [48.9, 2264.0], [49.0, 2264.0], [49.1, 2264.0], [49.2, 2264.0], [49.3, 2264.0], [49.4, 2264.0], [49.5, 2264.0], [49.6, 2264.0], [49.7, 2264.0], [49.8, 2264.0], [49.9, 2264.0], [50.0, 2264.0], [50.1, 2264.0], [50.2, 2264.0], [50.3, 2264.0], [50.4, 2264.0], [50.5, 2264.0], [50.6, 2264.0], [50.7, 2264.0], [50.8, 2264.0], [50.9, 2264.0], [51.0, 2264.0], [51.1, 2264.0], [51.2, 2264.0], [51.3, 2264.0], [51.4, 2264.0], [51.5, 2264.0], [51.6, 2264.0], [51.7, 2264.0], [51.8, 2264.0], [51.9, 2264.0], [52.0, 2264.0], [52.1, 2264.0], [52.2, 2264.0], [52.3, 2264.0], [52.4, 2264.0], [52.5, 2264.0], [52.6, 2264.0], [52.7, 2264.0], [52.8, 2264.0], [52.9, 2264.0], [53.0, 2264.0], [53.1, 2264.0], [53.2, 2264.0], [53.3, 2264.0], [53.4, 2264.0], [53.5, 2264.0], [53.6, 2264.0], [53.7, 2264.0], [53.8, 2264.0], [53.9, 2264.0], [54.0, 2264.0], [54.1, 2264.0], [54.2, 2264.0], [54.3, 2264.0], [54.4, 2264.0], [54.5, 2264.0], [54.6, 2264.0], [54.7, 2264.0], [54.8, 2264.0], [54.9, 2264.0], [55.0, 2264.0], [55.1, 2264.0], [55.2, 2264.0], [55.3, 2264.0], [55.4, 2264.0], [55.5, 2264.0], [55.6, 2264.0], [55.7, 2264.0], [55.8, 2264.0], [55.9, 2264.0], [56.0, 2264.0], [56.1, 2264.0], [56.2, 2264.0], [56.3, 2264.0], [56.4, 2264.0], [56.5, 2264.0], [56.6, 2264.0], [56.7, 2264.0], [56.8, 2264.0], [56.9, 2264.0], [57.0, 2264.0], [57.1, 2264.0], [57.2, 2264.0], [57.3, 2264.0], [57.4, 2264.0], [57.5, 2264.0], [57.6, 2264.0], [57.7, 2264.0], [57.8, 2264.0], [57.9, 2264.0], [58.0, 2264.0], [58.1, 2264.0], [58.2, 2264.0], [58.3, 2264.0], [58.4, 2264.0], [58.5, 2264.0], [58.6, 2264.0], [58.7, 2264.0], [58.8, 2264.0], [58.9, 2264.0], [59.0, 2264.0], [59.1, 2264.0], [59.2, 2264.0], [59.3, 2264.0], [59.4, 2264.0], [59.5, 2264.0], [59.6, 2264.0], [59.7, 2264.0], [59.8, 2264.0], [59.9, 2264.0], [60.0, 2264.0], [60.1, 2264.0], [60.2, 2264.0], [60.3, 2264.0], [60.4, 2264.0], [60.5, 2264.0], [60.6, 2264.0], [60.7, 2264.0], [60.8, 2264.0], [60.9, 2264.0], [61.0, 2264.0], [61.1, 2264.0], [61.2, 2264.0], [61.3, 2264.0], [61.4, 2264.0], [61.5, 2264.0], [61.6, 2264.0], [61.7, 2264.0], [61.8, 2264.0], [61.9, 2264.0], [62.0, 2264.0], [62.1, 2264.0], [62.2, 2264.0], [62.3, 2264.0], [62.4, 2264.0], [62.5, 2264.0], [62.6, 2264.0], [62.7, 2264.0], [62.8, 2264.0], [62.9, 2264.0], [63.0, 2264.0], [63.1, 2264.0], [63.2, 2264.0], [63.3, 2264.0], [63.4, 2264.0], [63.5, 2264.0], [63.6, 2264.0], [63.7, 2264.0], [63.8, 2264.0], [63.9, 2264.0], [64.0, 2264.0], [64.1, 2264.0], [64.2, 2264.0], [64.3, 2264.0], [64.4, 2264.0], [64.5, 2264.0], [64.6, 2264.0], [64.7, 2264.0], [64.8, 2264.0], [64.9, 2264.0], [65.0, 2264.0], [65.1, 2264.0], [65.2, 2264.0], [65.3, 2264.0], [65.4, 2264.0], [65.5, 2264.0], [65.6, 2264.0], [65.7, 2264.0], [65.8, 2264.0], [65.9, 2264.0], [66.0, 2264.0], [66.1, 2264.0], [66.2, 2264.0], [66.3, 2264.0], [66.4, 2264.0], [66.5, 2264.0], [66.6, 2264.0], [66.7, 2264.0], [66.8, 2264.0], [66.9, 2264.0], [67.0, 2264.0], [67.1, 2264.0], [67.2, 2264.0], [67.3, 2264.0], [67.4, 2264.0], [67.5, 2264.0], [67.6, 2264.0], [67.7, 2264.0], [67.8, 2264.0], [67.9, 2264.0], [68.0, 2264.0], [68.1, 2264.0], [68.2, 2264.0], [68.3, 2264.0], [68.4, 2264.0], [68.5, 2264.0], [68.6, 2264.0], [68.7, 2264.0], [68.8, 2264.0], [68.9, 2264.0], [69.0, 2264.0], [69.1, 2264.0], [69.2, 2264.0], [69.3, 2264.0], [69.4, 2264.0], [69.5, 2264.0], [69.6, 2264.0], [69.7, 2264.0], [69.8, 2264.0], [69.9, 2264.0], [70.0, 2264.0], [70.1, 2264.0], [70.2, 2264.0], [70.3, 2264.0], [70.4, 2264.0], [70.5, 2264.0], [70.6, 2264.0], [70.7, 2264.0], [70.8, 2264.0], [70.9, 2264.0], [71.0, 2264.0], [71.1, 2264.0], [71.2, 2264.0], [71.3, 2264.0], [71.4, 2264.0], [71.5, 2264.0], [71.6, 2264.0], [71.7, 2264.0], [71.8, 2264.0], [71.9, 2264.0], [72.0, 2264.0], [72.1, 2264.0], [72.2, 2264.0], [72.3, 2264.0], [72.4, 2264.0], [72.5, 2264.0], [72.6, 2264.0], [72.7, 2264.0], [72.8, 2264.0], [72.9, 2264.0], [73.0, 2264.0], [73.1, 2264.0], [73.2, 2264.0], [73.3, 2264.0], [73.4, 2264.0], [73.5, 2264.0], [73.6, 2264.0], [73.7, 2264.0], [73.8, 2264.0], [73.9, 2264.0], [74.0, 2264.0], [74.1, 2264.0], [74.2, 2264.0], [74.3, 2264.0], [74.4, 2264.0], [74.5, 2264.0], [74.6, 2264.0], [74.7, 2264.0], [74.8, 2264.0], [74.9, 2264.0], [75.0, 2264.0], [75.1, 2264.0], [75.2, 2264.0], [75.3, 2264.0], [75.4, 2264.0], [75.5, 2264.0], [75.6, 2264.0], [75.7, 2264.0], [75.8, 2264.0], [75.9, 2264.0], [76.0, 2264.0], [76.1, 2264.0], [76.2, 2264.0], [76.3, 2264.0], [76.4, 2264.0], [76.5, 2264.0], [76.6, 2264.0], [76.7, 2264.0], [76.8, 2264.0], [76.9, 2264.0], [77.0, 2264.0], [77.1, 2264.0], [77.2, 2264.0], [77.3, 2264.0], [77.4, 2264.0], [77.5, 2264.0], [77.6, 2264.0], [77.7, 2264.0], [77.8, 2264.0], [77.9, 2264.0], [78.0, 2264.0], [78.1, 2264.0], [78.2, 2264.0], [78.3, 2264.0], [78.4, 2264.0], [78.5, 2264.0], [78.6, 2264.0], [78.7, 2264.0], [78.8, 2264.0], [78.9, 2264.0], [79.0, 2264.0], [79.1, 2264.0], [79.2, 2264.0], [79.3, 2264.0], [79.4, 2264.0], [79.5, 2264.0], [79.6, 2264.0], [79.7, 2264.0], [79.8, 2264.0], [79.9, 2264.0], [80.0, 2264.0], [80.1, 2264.0], [80.2, 2264.0], [80.3, 2264.0], [80.4, 2264.0], [80.5, 2264.0], [80.6, 2264.0], [80.7, 2264.0], [80.8, 2264.0], [80.9, 2264.0], [81.0, 2264.0], [81.1, 2264.0], [81.2, 2264.0], [81.3, 2264.0], [81.4, 2264.0], [81.5, 2264.0], [81.6, 2264.0], [81.7, 2264.0], [81.8, 2264.0], [81.9, 2264.0], [82.0, 2264.0], [82.1, 2264.0], [82.2, 2264.0], [82.3, 2264.0], [82.4, 2264.0], [82.5, 2264.0], [82.6, 2264.0], [82.7, 2264.0], [82.8, 2264.0], [82.9, 2264.0], [83.0, 2264.0], [83.1, 2264.0], [83.2, 2264.0], [83.3, 2264.0], [83.4, 2264.0], [83.5, 2264.0], [83.6, 2264.0], [83.7, 2264.0], [83.8, 2264.0], [83.9, 2264.0], [84.0, 2264.0], [84.1, 2264.0], [84.2, 2264.0], [84.3, 2264.0], [84.4, 2264.0], [84.5, 2264.0], [84.6, 2264.0], [84.7, 2264.0], [84.8, 2264.0], [84.9, 2264.0], [85.0, 2264.0], [85.1, 2264.0], [85.2, 2264.0], [85.3, 2264.0], [85.4, 2264.0], [85.5, 2264.0], [85.6, 2264.0], [85.7, 2264.0], [85.8, 2264.0], [85.9, 2264.0], [86.0, 2264.0], [86.1, 2264.0], [86.2, 2264.0], [86.3, 2264.0], [86.4, 2264.0], [86.5, 2264.0], [86.6, 2264.0], [86.7, 2264.0], [86.8, 2264.0], [86.9, 2264.0], [87.0, 2264.0], [87.1, 2264.0], [87.2, 2264.0], [87.3, 2264.0], [87.4, 2264.0], [87.5, 2264.0], [87.6, 2264.0], [87.7, 2264.0], [87.8, 2264.0], [87.9, 2264.0], [88.0, 2264.0], [88.1, 2264.0], [88.2, 2264.0], [88.3, 2264.0], [88.4, 2264.0], [88.5, 2264.0], [88.6, 2264.0], [88.7, 2264.0], [88.8, 2264.0], [88.9, 2264.0], [89.0, 2264.0], [89.1, 2264.0], [89.2, 2264.0], [89.3, 2264.0], [89.4, 2264.0], [89.5, 2264.0], [89.6, 2264.0], [89.7, 2264.0], [89.8, 2264.0], [89.9, 2264.0], [90.0, 2264.0], [90.1, 2264.0], [90.2, 2264.0], [90.3, 2264.0], [90.4, 2264.0], [90.5, 2264.0], [90.6, 2264.0], [90.7, 2264.0], [90.8, 2264.0], [90.9, 2264.0], [91.0, 2264.0], [91.1, 2264.0], [91.2, 2264.0], [91.3, 2264.0], [91.4, 2264.0], [91.5, 2264.0], [91.6, 2264.0], [91.7, 2264.0], [91.8, 2264.0], [91.9, 2264.0], [92.0, 2264.0], [92.1, 2264.0], [92.2, 2264.0], [92.3, 2264.0], [92.4, 2264.0], [92.5, 2264.0], [92.6, 2264.0], [92.7, 2264.0], [92.8, 2264.0], [92.9, 2264.0], [93.0, 2264.0], [93.1, 2264.0], [93.2, 2264.0], [93.3, 2264.0], [93.4, 2264.0], [93.5, 2264.0], [93.6, 2264.0], [93.7, 2264.0], [93.8, 2264.0], [93.9, 2264.0], [94.0, 2264.0], [94.1, 2264.0], [94.2, 2264.0], [94.3, 2264.0], [94.4, 2264.0], [94.5, 2264.0], [94.6, 2264.0], [94.7, 2264.0], [94.8, 2264.0], [94.9, 2264.0], [95.0, 2264.0], [95.1, 2264.0], [95.2, 2264.0], [95.3, 2264.0], [95.4, 2264.0], [95.5, 2264.0], [95.6, 2264.0], [95.7, 2264.0], [95.8, 2264.0], [95.9, 2264.0], [96.0, 2264.0], [96.1, 2264.0], [96.2, 2264.0], [96.3, 2264.0], [96.4, 2264.0], [96.5, 2264.0], [96.6, 2264.0], [96.7, 2264.0], [96.8, 2264.0], [96.9, 2264.0], [97.0, 2264.0], [97.1, 2264.0], [97.2, 2264.0], [97.3, 2264.0], [97.4, 2264.0], [97.5, 2264.0], [97.6, 2264.0], [97.7, 2264.0], [97.8, 2264.0], [97.9, 2264.0], [98.0, 2264.0], [98.1, 2264.0], [98.2, 2264.0], [98.3, 2264.0], [98.4, 2264.0], [98.5, 2264.0], [98.6, 2264.0], [98.7, 2264.0], [98.8, 2264.0], [98.9, 2264.0], [99.0, 2264.0], [99.1, 2264.0], [99.2, 2264.0], [99.3, 2264.0], [99.4, 2264.0], [99.5, 2264.0], [99.6, 2264.0], [99.7, 2264.0], [99.8, 2264.0], [99.9, 2264.0]], "isOverall": false, "label": "loginCognito", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 480.0, "series": [{"data": [[2300.0, 1.0], [2400.0, 1.0], [600.0, 112.0], [2500.0, 1.0], [2700.0, 1.0], [700.0, 71.0], [3300.0, 1.0], [800.0, 19.0], [3400.0, 1.0], [900.0, 11.0], [1000.0, 2.0], [1100.0, 3.0], [1200.0, 3.0], [1300.0, 1.0], [400.0, 22.0], [500.0, 204.0]], "isOverall": false, "label": "autorizacionSalida", "isController": false}, {"data": [[2100.0, 1.0], [2300.0, 2.0], [2400.0, 1.0], [2500.0, 1.0], [2600.0, 3.0], [700.0, 480.0], [800.0, 416.0], [900.0, 51.0], [1000.0, 17.0], [4300.0, 1.0], [1100.0, 4.0], [4400.0, 1.0], [1200.0, 7.0], [1300.0, 4.0], [1400.0, 1.0], [1500.0, 2.0], [1900.0, 1.0]], "isOverall": false, "label": "preAutorizacionPlacasNoFlypass", "isController": false}, {"data": [[300.0, 8.0], [1200.0, 1.0], [600.0, 1.0], [1500.0, 1.0], [100.0, 221.0], [400.0, 6.0], [200.0, 51.0]], "isOverall": false, "label": "autorizacion", "isController": false}, {"data": [[2100.0, 1.0], [600.0, 73.0], [2500.0, 2.0], [2700.0, 1.0], [700.0, 28.0], [3100.0, 2.0], [800.0, 11.0], [900.0, 9.0], [1000.0, 6.0], [1100.0, 3.0], [1200.0, 1.0], [400.0, 32.0], [500.0, 122.0]], "isOverall": false, "label": "preAutorizacion", "isController": false}, {"data": [[2200.0, 1.0]], "isOverall": false, "label": "loginCognito", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 215.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 200ms"], [1, "Requests having \nresponse time > 200ms and <= 100ms"], [2, "Requests having \nresponse time > 100ms"], [3, "Requests in error"]], "maxY": 1012.0, "series": [{"data": [[0.0, 215.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 200ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 200ms and <= 100ms", "isController": false}, {"data": [[2.0, 801.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 100ms", "isController": false}, {"data": [[3.0, 1012.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.7363694E12, "maxY": 5.0, "series": [{"data": [[1.73636946E12, 5.0], [1.73636964E12, 5.0], [1.7363697E12, 4.943820224719102], [1.73636952E12, 5.0], [1.73636958E12, 5.0], [1.7363694E12, 5.0]], "isOverall": false, "label": "preAutorizacionPlacasNoFlypass", "isController": false}, {"data": [[1.7363694E12, 1.0]], "isOverall": false, "label": "setUp Thread Group", "isController": false}, {"data": [[1.73636946E12, 5.0], [1.73636964E12, 5.0], [1.7363697E12, 4.980392156862745], [1.73636952E12, 5.0], [1.73636958E12, 5.0], [1.7363694E12, 5.0]], "isOverall": false, "label": "FlujoCompleto", "isController": false}, {"data": [[1.73636946E12, 5.0], [1.73636964E12, 5.0], [1.7363697E12, 4.882352941176471], [1.73636952E12, 5.0], [1.73636958E12, 5.0], [1.7363694E12, 5.0]], "isOverall": false, "label": "SoloPago", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7363697E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 186.2283737024222, "minX": 1.0, "maxY": 2264.0, "series": [{"data": [[4.0, 714.0], [2.0, 603.0], [1.0, 708.0], [6.0, 568.0], [3.0, 707.0], [14.0, 536.0], [15.0, 670.1183035714283]], "isOverall": false, "label": "autorizacionSalida", "isController": false}, {"data": [[14.86784140969163, 669.711453744493]], "isOverall": false, "label": "autorizacionSalida-Aggregated", "isController": false}, {"data": [[8.0, 834.0], [9.0, 831.0], [11.0, 804.0], [12.0, 780.0], [7.0, 824.0], [15.0, 843.5091093117414]], "isOverall": false, "label": "preAutorizacionPlacasNoFlypass", "isController": false}, {"data": [[14.971802618328297, 843.3635448136964]], "isOverall": false, "label": "preAutorizacionPlacasNoFlypass-Aggregated", "isController": false}, {"data": [[15.0, 186.2283737024222]], "isOverall": false, "label": "autorizacion", "isController": false}, {"data": [[15.0, 186.2283737024222]], "isOverall": false, "label": "autorizacion-Aggregated", "isController": false}, {"data": [[13.0, 498.0], [15.0, 675.6758620689651]], "isOverall": false, "label": "preAutorizacion", "isController": false}, {"data": [[14.993127147766323, 675.0652920962195]], "isOverall": false, "label": "preAutorizacion-Aggregated", "isController": false}, {"data": [[1.0, 2264.0]], "isOverall": false, "label": "loginCognito", "isController": false}, {"data": [[1.0, 2264.0]], "isOverall": false, "label": "loginCognito-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 15.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 365.3833333333333, "minX": 1.7363694E12, "maxY": 13012.883333333333, "series": [{"data": [[1.73636946E12, 3270.1], [1.73636964E12, 3264.3166666666666], [1.7363697E12, 2911.9333333333334], [1.73636952E12, 3248.4166666666665], [1.73636958E12, 3245.45], [1.7363694E12, 365.3833333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.73636946E12, 13012.883333333333], [1.73636964E12, 12994.2], [1.7363697E12, 11647.033333333333], [1.73636952E12, 12924.216666666667], [1.73636958E12, 12887.45], [1.7363694E12, 1216.6666666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7363697E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 162.4, "minX": 1.7363694E12, "maxY": 2813.6, "series": [{"data": [[1.73636946E12, 695.2222222222225], [1.73636964E12, 620.1868131868134], [1.7363697E12, 612.1647058823529], [1.73636952E12, 653.3516483516484], [1.73636958E12, 642.9101123595507], [1.7363694E12, 2041.75]], "isOverall": false, "label": "autorizacionSalida", "isController": false}, {"data": [[1.73636946E12, 833.3949999999998], [1.73636964E12, 834.7878787878792], [1.7363697E12, 829.6179775280903], [1.73636952E12, 847.0850000000005], [1.73636958E12, 825.6751269035532], [1.7363694E12, 1287.3]], "isOverall": false, "label": "preAutorizacionPlacasNoFlypass", "isController": false}, {"data": [[1.73636946E12, 238.20689655172413], [1.73636964E12, 165.86666666666673], [1.7363697E12, 162.4], [1.73636952E12, 193.15517241379314], [1.73636958E12, 168.84482758620695], [1.7363694E12, 187.2]], "isOverall": false, "label": "autorizacion", "isController": false}, {"data": [[1.73636946E12, 669.0833333333334], [1.73636964E12, 600.948275862069], [1.7363697E12, 638.0961538461539], [1.73636952E12, 660.9285714285716], [1.73636958E12, 619.7166666666666], [1.7363694E12, 2813.6]], "isOverall": false, "label": "preAutorizacion", "isController": false}, {"data": [[1.7363694E12, 2264.0]], "isOverall": false, "label": "loginCognito", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7363697E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 162.36, "minX": 1.7363694E12, "maxY": 2813.6, "series": [{"data": [[1.73636946E12, 695.1666666666667], [1.73636964E12, 620.1648351648353], [1.7363697E12, 612.1411764705881], [1.73636952E12, 653.3186813186815], [1.73636958E12, 642.8876404494379], [1.7363694E12, 2041.6249999999998]], "isOverall": false, "label": "autorizacionSalida", "isController": false}, {"data": [[1.73636946E12, 833.3], [1.73636964E12, 834.7676767676767], [1.7363697E12, 829.5786516853932], [1.73636952E12, 847.0500000000001], [1.73636958E12, 825.6446700507618], [1.7363694E12, 1287.1999999999998]], "isOverall": false, "label": "preAutorizacionPlacasNoFlypass", "isController": false}, {"data": [[1.73636946E12, 238.18965517241384], [1.73636964E12, 165.86666666666673], [1.7363697E12, 162.36], [1.73636952E12, 193.15517241379314], [1.73636958E12, 168.8103448275862], [1.7363694E12, 187.0]], "isOverall": false, "label": "autorizacion", "isController": false}, {"data": [[1.73636946E12, 668.9499999999996], [1.73636964E12, 600.9137931034484], [1.7363697E12, 638.0961538461539], [1.73636952E12, 660.8928571428571], [1.73636958E12, 619.6999999999999], [1.7363694E12, 2813.6]], "isOverall": false, "label": "preAutorizacion", "isController": false}, {"data": [[1.7363694E12, 2258.0]], "isOverall": false, "label": "loginCognito", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7363697E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7363694E12, "maxY": 1788.0, "series": [{"data": [[1.73636946E12, 347.6], [1.73636964E12, 351.7912087912087], [1.7363697E12, 356.2941176470588], [1.73636952E12, 340.1428571428571], [1.73636958E12, 344.20224719101134], [1.7363694E12, 376.5]], "isOverall": false, "label": "autorizacionSalida", "isController": false}, {"data": [[1.73636946E12, 347.88000000000005], [1.73636964E12, 358.08585858585866], [1.7363697E12, 367.7359550561799], [1.73636952E12, 342.6650000000001], [1.73636958E12, 338.9746192893403], [1.7363694E12, 354.75]], "isOverall": false, "label": "preAutorizacionPlacasNoFlypass", "isController": false}, {"data": [[1.73636946E12, 0.0], [1.73636964E12, 0.0], [1.7363697E12, 0.0], [1.73636952E12, 0.0], [1.73636958E12, 0.0], [1.7363694E12, 0.0]], "isOverall": false, "label": "autorizacion", "isController": false}, {"data": [[1.73636946E12, 342.7333333333333], [1.73636964E12, 338.7586206896551], [1.7363697E12, 351.5192307692308], [1.73636952E12, 340.10714285714295], [1.73636958E12, 340.33333333333337], [1.7363694E12, 328.2]], "isOverall": false, "label": "preAutorizacion", "isController": false}, {"data": [[1.7363694E12, 1788.0]], "isOverall": false, "label": "loginCognito", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7363697E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 111.0, "minX": 1.7363694E12, "maxY": 3465.0, "series": [{"data": [[1.73636946E12, 1532.0], [1.73636964E12, 1272.0], [1.7363697E12, 937.0], [1.73636952E12, 1394.0], [1.73636958E12, 2598.0], [1.7363694E12, 3465.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.73636946E12, 890.4000000000001], [1.73636964E12, 703.6], [1.7363697E12, 715.0000000000001], [1.73636952E12, 781.4], [1.73636958E12, 718.6], [1.7363694E12, 3370.5]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.73636946E12, 1289.1599999999999], [1.73636964E12, 1093.4400000000007], [1.7363697E12, 902.68], [1.73636952E12, 1282.08], [1.73636958E12, 2083.319999999985], [1.7363694E12, 3465.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.73636946E12, 1023.8999999999996], [1.73636964E12, 776.7999999999997], [1.7363697E12, 794.2], [1.73636952E12, 975.6999999999998], [1.73636958E12, 790.4], [1.7363694E12, 3465.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.73636946E12, 115.0], [1.73636964E12, 111.0], [1.7363697E12, 114.0], [1.73636952E12, 111.0], [1.73636958E12, 113.0], [1.7363694E12, 135.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.73636946E12, 583.0], [1.73636964E12, 534.0], [1.7363697E12, 551.0], [1.73636952E12, 556.0], [1.73636958E12, 541.0], [1.7363694E12, 2481.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7363697E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 516.5, "minX": 1.0, "maxY": 2264.0, "series": [{"data": [[8.0, 550.0], [2.0, 598.0], [9.0, 572.0], [10.0, 582.5], [11.0, 593.5], [12.0, 516.5], [3.0, 521.5], [13.0, 598.0], [1.0, 2264.0], [4.0, 546.0], [5.0, 541.0], [6.0, 551.0], [7.0, 534.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 798.0], [2.0, 827.0], [9.0, 804.0], [10.0, 805.5], [11.0, 812.0], [12.0, 812.5], [3.0, 788.5], [13.0, 805.0], [4.0, 803.0], [1.0, 841.5], [5.0, 799.0], [6.0, 800.0], [7.0, 796.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 13.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 516.5, "minX": 1.0, "maxY": 2258.0, "series": [{"data": [[8.0, 550.0], [2.0, 598.0], [9.0, 572.0], [10.0, 582.5], [11.0, 593.5], [12.0, 516.5], [3.0, 521.5], [13.0, 598.0], [1.0, 2258.0], [4.0, 546.0], [5.0, 541.0], [6.0, 551.0], [7.0, 534.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 798.0], [2.0, 827.0], [9.0, 804.0], [10.0, 805.5], [11.0, 812.0], [12.0, 812.5], [3.0, 788.5], [13.0, 805.0], [4.0, 803.0], [1.0, 841.5], [5.0, 799.0], [6.0, 799.0], [7.0, 796.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 13.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.7, "minX": 1.7363694E12, "maxY": 6.783333333333333, "series": [{"data": [[1.73636946E12, 6.783333333333333], [1.73636964E12, 6.783333333333333], [1.7363697E12, 6.0], [1.73636952E12, 6.766666666666667], [1.73636958E12, 6.766666666666667], [1.7363694E12, 0.7]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7363697E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.7363694E12, "maxY": 3.45, "series": [{"data": [[1.73636946E12, 3.4166666666666665], [1.73636964E12, 3.433333333333333], [1.7363697E12, 2.95], [1.73636952E12, 3.4166666666666665], [1.73636958E12, 3.45], [1.7363694E12, 0.26666666666666666]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.73636946E12, 0.05], [1.73636964E12, 0.05], [1.7363697E12, 0.16666666666666666], [1.7363694E12, 0.05]], "isOverall": false, "label": "400", "isController": false}, {"data": [[1.73636946E12, 3.3333333333333335], [1.73636964E12, 3.3], [1.7363697E12, 2.966666666666667], [1.73636952E12, 3.3333333333333335], [1.73636958E12, 3.283333333333333], [1.7363694E12, 0.3333333333333333]], "isOverall": false, "label": "404", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7363697E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.7363694E12, "maxY": 3.3333333333333335, "series": [{"data": [[1.73636946E12, 0.05], [1.7363697E12, 0.08333333333333333]], "isOverall": false, "label": "autorizacion-failure", "isController": false}, {"data": [[1.73636964E12, 0.05], [1.7363694E12, 0.05]], "isOverall": false, "label": "autorizacionSalida-failure", "isController": false}, {"data": [[1.73636946E12, 3.3333333333333335], [1.73636964E12, 3.3], [1.7363697E12, 2.966666666666667], [1.73636952E12, 3.3333333333333335], [1.73636958E12, 3.283333333333333], [1.7363694E12, 0.3333333333333333]], "isOverall": false, "label": "preAutorizacionPlacasNoFlypass-failure", "isController": false}, {"data": [[1.73636946E12, 1.5], [1.73636964E12, 1.4666666666666666], [1.7363697E12, 1.4166666666666667], [1.73636952E12, 1.5166666666666666], [1.73636958E12, 1.4833333333333334], [1.7363694E12, 0.08333333333333333]], "isOverall": false, "label": "autorizacionSalida-success", "isController": false}, {"data": [[1.7363694E12, 0.016666666666666666]], "isOverall": false, "label": "loginCognito-success", "isController": false}, {"data": [[1.73636946E12, 1.0], [1.73636964E12, 0.9666666666666667], [1.7363697E12, 0.7833333333333333], [1.73636952E12, 0.9333333333333333], [1.73636958E12, 1.0], [1.7363694E12, 0.08333333333333333]], "isOverall": false, "label": "preAutorizacion-success", "isController": false}, {"data": [[1.7363697E12, 0.08333333333333333]], "isOverall": false, "label": "preAutorizacion-failure", "isController": false}, {"data": [[1.73636946E12, 0.9166666666666666], [1.73636964E12, 1.0], [1.7363697E12, 0.75], [1.73636952E12, 0.9666666666666667], [1.73636958E12, 0.9666666666666667], [1.7363694E12, 0.08333333333333333]], "isOverall": false, "label": "autorizacion-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7363697E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.26666666666666666, "minX": 1.7363694E12, "maxY": 3.45, "series": [{"data": [[1.73636946E12, 3.4166666666666665], [1.73636964E12, 3.433333333333333], [1.7363697E12, 2.95], [1.73636952E12, 3.4166666666666665], [1.73636958E12, 3.45], [1.7363694E12, 0.26666666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.73636946E12, 3.3833333333333333], [1.73636964E12, 3.35], [1.7363697E12, 3.1333333333333333], [1.73636952E12, 3.3333333333333335], [1.73636958E12, 3.283333333333333], [1.7363694E12, 0.38333333333333336]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7363697E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

